{"ast":null,"code":"var _jsxFileName = \"/Users/manojsahithreddyvanga/Desktop/Testing/chatgpt-clone/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Message from \"./components/Message\";\nimport Input from \"./components/Input\";\nimport Clear from \"./components/Clear\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState(() => {\n    const savedMessages = localStorage.getItem(\"messages\");\n    return savedMessages ? JSON.parse(savedMessages) : [];\n  });\n  const [savedConversations, setSavedConversations] = useState(() => {\n    const saved = localStorage.getItem(\"savedConversations\");\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [currentModel, setCurrentModel] = useState(\"gpt-3.5-turbo\");\n  useEffect(() => {\n    localStorage.setItem(\"messages\", JSON.stringify(messages));\n  }, [messages]);\n  const handleSubmit = async () => {\n    const userMessage = {\n      role: \"user\",\n      content: input\n    };\n    setMessages([...messages, userMessage]);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_input: input,\n          model: currentModel\n        })\n      });\n      const data = await response.json();\n      const assistantMessage = {\n        role: \"assistant\",\n        content: data.response\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n      setInput(\"\");\n    } catch (error) {\n      console.error(\"Error during fetch:\", error);\n    }\n  };\n  const saveConversation = () => {\n    const timestamp = new Date().toLocaleString();\n    const newConversation = {\n      id: timestamp,\n      title: `Conversation at ${timestamp}`,\n      messages,\n      model: currentModel\n    };\n    const updatedConversations = [...savedConversations, newConversation];\n    setSavedConversations(updatedConversations);\n    localStorage.setItem(\"savedConversations\", JSON.stringify(updatedConversations));\n    alert(\"Conversation saved!\");\n  };\n  const loadConversation = conversation => {\n    setMessages(conversation.messages);\n    setCurrentModel(conversation.model);\n  };\n  const clear = async () => {\n    setMessages([]);\n    localStorage.removeItem(\"messages\");\n    await fetch(\"http://localhost:5000/api/clear\", {\n      method: \"POST\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Saved Conversations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), savedConversations.map(conversation => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ConversationItem\",\n        onClick: () => loadConversation(conversation),\n        children: conversation.title\n      }, conversation.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"Title\",\n          children: \"Chat Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Content\",\n          children: messages.map((el, i) => /*#__PURE__*/_jsxDEV(Message, {\n            role: el.role,\n            content: el.content\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onClick: input ? handleSubmit : undefined\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ButtonGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveConversation,\n            className: \"SaveButton\",\n            children: \"Save Conversation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Clear, {\n            onClick: clear\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EwhoSYCAQqDBVZwZXtqTDeCXANo=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Message","Input","Clear","jsxDEV","_jsxDEV","App","_s","input","setInput","messages","setMessages","savedMessages","localStorage","getItem","JSON","parse","savedConversations","setSavedConversations","saved","currentModel","setCurrentModel","setItem","stringify","handleSubmit","userMessage","role","content","response","fetch","method","headers","body","user_input","model","data","json","assistantMessage","prev","error","console","saveConversation","timestamp","Date","toLocaleString","newConversation","id","title","updatedConversations","alert","loadConversation","conversation","clear","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","el","i","value","onChange","e","target","undefined","_c","$RefreshReg$"],"sources":["/Users/manojsahithreddyvanga/Desktop/Testing/chatgpt-clone/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Message from \"./components/Message\";\nimport Input from \"./components/Input\";\nimport Clear from \"./components/Clear\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState(() => {\n    const savedMessages = localStorage.getItem(\"messages\");\n    return savedMessages ? JSON.parse(savedMessages) : [];\n  });\n  const [savedConversations, setSavedConversations] = useState(() => {\n    const saved = localStorage.getItem(\"savedConversations\");\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [currentModel, setCurrentModel] = useState(\"gpt-3.5-turbo\");\n\n  useEffect(() => {\n    localStorage.setItem(\"messages\", JSON.stringify(messages));\n  }, [messages]);\n\n  const handleSubmit = async () => {\n    const userMessage = { role: \"user\", content: input };\n    setMessages([...messages, userMessage]);\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ user_input: input, model: currentModel }),\n      });\n\n      const data = await response.json();\n      const assistantMessage = { role: \"assistant\", content: data.response };\n\n      setMessages((prev) => [...prev, assistantMessage]);\n      setInput(\"\");\n    } catch (error) {\n      console.error(\"Error during fetch:\", error);\n    }\n  };\n\n  const saveConversation = () => {\n    const timestamp = new Date().toLocaleString();\n    const newConversation = {\n      id: timestamp,\n      title: `Conversation at ${timestamp}`,\n      messages,\n      model: currentModel,\n    };\n\n    const updatedConversations = [...savedConversations, newConversation];\n    setSavedConversations(updatedConversations);\n    localStorage.setItem(\"savedConversations\", JSON.stringify(updatedConversations));\n    alert(\"Conversation saved!\");\n  };\n\n  const loadConversation = (conversation) => {\n    setMessages(conversation.messages);\n    setCurrentModel(conversation.model);\n  };\n\n  const clear = async () => {\n    setMessages([]);\n    localStorage.removeItem(\"messages\");\n\n    await fetch(\"http://localhost:5000/api/clear\", {\n      method: \"POST\",\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"Sidebar\">\n        <h3>Saved Conversations</h3>\n        {savedConversations.map((conversation) => (\n          <div\n            key={conversation.id}\n            className=\"ConversationItem\"\n            onClick={() => loadConversation(conversation)}\n          >\n            {conversation.title}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"Main\">\n        <div className=\"Column\">\n          <h3 className=\"Title\">Chat Messages</h3>\n          <div className=\"Content\">\n            {messages.map((el, i) => (\n              <Message key={i} role={el.role} content={el.content} />\n            ))}\n          </div>\n          <Input\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onClick={input ? handleSubmit : undefined}\n          />\n          <div className=\"ButtonGroup\">\n            <button onClick={saveConversation} className=\"SaveButton\">Save Conversation</button>\n            <Clear onClick={clear} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}