{"ast":null,"code":"var _jsxFileName = \"/Users/manojsahithreddyvanga/Desktop/Testing/chatgpt-clone/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Message from \"./components/Message\";\nimport Input from \"./components/Input\";\nimport \"./App.css\";\nimport { FaFileAlt, FaCheckCircle } from \"react-icons/fa\"; // File icon import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState(() => {\n    const savedMessages = localStorage.getItem(\"messages\");\n    return savedMessages ? JSON.parse(savedMessages) : [];\n  });\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [savedConversations, setSavedConversations] = useState(() => {\n    const saved = localStorage.getItem(\"savedConversations\");\n    return saved ? JSON.parse(savedConversations) : [];\n  });\n  const [conversationId, setConversationId] = useState(null);\n  const [loading, setLoading] = useState(false); // Loader state\n  const [currentConversationIndex, setCurrentConversationIndex] = useState(null); // Track current conversation\n  const [fileUploaded, setFileUploaded] = useState(false); // Track if a file has been uploaded\n  const [model, setModel] = useState(\"gpt-4\"); // Current model state\n\n  useEffect(() => {\n    const initializeConversation = async () => {\n      const response = await fetch(\"http://localhost:5000/api/start_conversation\", {\n        method: \"POST\"\n      });\n      const data = await response.json();\n      setConversationId(data.conversation_id);\n    };\n    if (!conversationId) {\n      initializeConversation();\n    }\n  }, [conversationId]);\n  useEffect(() => {\n    localStorage.setItem(\"messages\", JSON.stringify(messages));\n  }, [messages]);\n  const handleSubmit = async () => {\n    if (!conversationId) {\n      alert(\"Conversation not initialized properly. Please try again.\");\n      return;\n    }\n    const userMessage = {\n      role: \"user\",\n      content: input,\n      attachedFiles: uploadedFiles.map(file => file.name) // Attach file names temporarily\n    };\n    setMessages([...messages, userMessage]);\n    setInput(\"\"); // Clear input as soon as message is submitted\n    setLoading(true); // Show loader\n\n    try {\n      const formData = new FormData();\n      uploadedFiles.forEach(file => formData.append(\"files\", file));\n      formData.append(\"conversation_id\", conversationId);\n      formData.append(\"user_input\", input);\n      formData.append(\"model\", model); // Pass the current model to the backend\n\n      const response = await fetch(\"http://localhost:5000/api/chat_with_files\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      const assistantMessage = {\n        role: \"assistant\",\n        content: data.response\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n      setUploadedFiles([]); // Clear files after the query is done\n      setFileUploaded(false); // Reset file upload indicator\n    } catch (error) {\n      console.error(\"Error during fetch:\", error);\n    } finally {\n      setLoading(false); // Hide loader\n    }\n  };\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    setUploadedFiles(prev => [...prev, file]);\n    setFileUploaded(true); // Indicate that a file has been uploaded\n  };\n  const switchModel = () => {\n    setModel(prevModel => prevModel === \"gpt-4\" ? \"claude-3.5\" : \"gpt-4\");\n    alert(`Switched to ${model === \"gpt-4\" ? \"Claude 3.5 Sonnet\" : \"GPT-4\"}`);\n  };\n  const saveAndStartNewConversation = async () => {\n    const timestamp = new Date().toLocaleString();\n    if (currentConversationIndex !== null) {\n      // Update the existing conversation\n      const updatedConversations = [...savedConversations];\n      updatedConversations[currentConversationIndex].messages = messages.map(msg => ({\n        role: msg.role,\n        content: msg.content\n      }));\n      updatedConversations[currentConversationIndex].title = `Updated at ${timestamp}`;\n      setSavedConversations(updatedConversations);\n      localStorage.setItem(\"savedConversations\", JSON.stringify(updatedConversations));\n      alert(\"Conversation updated!\");\n    } else {\n      // Save as a new conversation\n      const newConversation = {\n        id: conversationId,\n        title: `Conversation at ${timestamp}`,\n        messages: messages.map(msg => ({\n          role: msg.role,\n          content: msg.content\n        })) // Exclude files\n      };\n      setSavedConversations(prev => [...prev, newConversation]);\n      localStorage.setItem(\"savedConversations\", JSON.stringify([...savedConversations, newConversation]));\n      alert(\"Conversation saved!\");\n    }\n\n    // Start a new conversation\n    setMessages([]);\n    setUploadedFiles([]);\n    const response = await fetch(\"http://localhost:5000/api/start_conversation\", {\n      method: \"POST\"\n    });\n    const data = await response.json();\n    setConversationId(data.conversation_id);\n    setCurrentConversationIndex(null); // Reset for new conversation\n  };\n  const loadConversation = (conversation, index) => {\n    setMessages(conversation.messages);\n    setConversationId(conversation.id);\n    setCurrentConversationIndex(index); // Track current conversation\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Saved Conversations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), savedConversations.map((conversation, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ConversationItem\",\n        onClick: () => loadConversation(conversation, index),\n        children: conversation.title\n      }, conversation.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"Title\",\n          children: \"Chat Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Content\",\n          children: [messages.map((el, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"MessageWrapper\",\n            children: /*#__PURE__*/_jsxDEV(Message, {\n              role: el.role,\n              content: el.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Loader\",\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), fileUploaded && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"FileIndicator\",\n            children: [/*#__PURE__*/_jsxDEV(FaCheckCircle, {\n              color: \"green\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 61\n            }, this), \" File Uploaded\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onClick: input ? handleSubmit : undefined,\n          onFileUpload: handleFileUpload,\n          onEnter: input ? handleSubmit : undefined\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ButtonContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveAndStartNewConversation,\n            className: \"SaveButton\",\n            children: \"Save and Start New Conversation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: switchModel,\n            className: \"SwitchButton\",\n            children: \"Switch Model\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AK+odgf9DwS+ROS4+yXrfX1YCQc=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Message","Input","FaFileAlt","FaCheckCircle","jsxDEV","_jsxDEV","App","_s","input","setInput","messages","setMessages","savedMessages","localStorage","getItem","JSON","parse","uploadedFiles","setUploadedFiles","savedConversations","setSavedConversations","saved","conversationId","setConversationId","loading","setLoading","currentConversationIndex","setCurrentConversationIndex","fileUploaded","setFileUploaded","model","setModel","initializeConversation","response","fetch","method","data","json","conversation_id","setItem","stringify","handleSubmit","alert","userMessage","role","content","attachedFiles","map","file","name","formData","FormData","forEach","append","body","assistantMessage","prev","error","console","handleFileUpload","e","target","files","switchModel","prevModel","saveAndStartNewConversation","timestamp","Date","toLocaleString","updatedConversations","msg","title","newConversation","id","loadConversation","conversation","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","el","i","color","value","onChange","undefined","onFileUpload","onEnter","_c","$RefreshReg$"],"sources":["/Users/manojsahithreddyvanga/Desktop/Testing/chatgpt-clone/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Message from \"./components/Message\";\nimport Input from \"./components/Input\";\nimport \"./App.css\";\nimport { FaFileAlt, FaCheckCircle } from \"react-icons/fa\";  // File icon import\n\nexport default function App() {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState(() => {\n    const savedMessages = localStorage.getItem(\"messages\");\n    return savedMessages ? JSON.parse(savedMessages) : [];\n  });\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [savedConversations, setSavedConversations] = useState(() => {\n    const saved = localStorage.getItem(\"savedConversations\");\n    return saved ? JSON.parse(savedConversations) : [];\n  });\n  const [conversationId, setConversationId] = useState(null);\n  const [loading, setLoading] = useState(false);  // Loader state\n  const [currentConversationIndex, setCurrentConversationIndex] = useState(null); // Track current conversation\n  const [fileUploaded, setFileUploaded] = useState(false);  // Track if a file has been uploaded\n  const [model, setModel] = useState(\"gpt-4\");  // Current model state\n\n  useEffect(() => {\n    const initializeConversation = async () => {\n      const response = await fetch(\"http://localhost:5000/api/start_conversation\", {\n        method: \"POST\",\n      });\n      const data = await response.json();\n      setConversationId(data.conversation_id);\n    };\n\n    if (!conversationId) {\n      initializeConversation();\n    }\n  }, [conversationId]);\n\n  useEffect(() => {\n    localStorage.setItem(\"messages\", JSON.stringify(messages));\n  }, [messages]);\n\n  const handleSubmit = async () => {\n    if (!conversationId) {\n      alert(\"Conversation not initialized properly. Please try again.\");\n      return;\n    }\n\n    const userMessage = {\n      role: \"user\",\n      content: input,\n      attachedFiles: uploadedFiles.map((file) => file.name),  // Attach file names temporarily\n    };\n\n    setMessages([...messages, userMessage]);\n    setInput(\"\");  // Clear input as soon as message is submitted\n    setLoading(true);  // Show loader\n\n    try {\n      const formData = new FormData();\n      uploadedFiles.forEach(file => formData.append(\"files\", file));\n      formData.append(\"conversation_id\", conversationId);\n      formData.append(\"user_input\", input);\n      formData.append(\"model\", model);  // Pass the current model to the backend\n\n      const response = await fetch(\"http://localhost:5000/api/chat_with_files\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      const data = await response.json();\n      const assistantMessage = { role: \"assistant\", content: data.response };\n\n      setMessages((prev) => [...prev, assistantMessage]);\n      setUploadedFiles([]);  // Clear files after the query is done\n      setFileUploaded(false);  // Reset file upload indicator\n    } catch (error) {\n      console.error(\"Error during fetch:\", error);\n    } finally {\n      setLoading(false);  // Hide loader\n    }\n  };\n\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    setUploadedFiles((prev) => [...prev, file]);\n    setFileUploaded(true);  // Indicate that a file has been uploaded\n  };\n\n  const switchModel = () => {\n    setModel(prevModel => prevModel === \"gpt-4\" ? \"claude-3.5\" : \"gpt-4\");\n    alert(`Switched to ${model === \"gpt-4\" ? \"Claude 3.5 Sonnet\" : \"GPT-4\"}`);\n  };\n\n  const saveAndStartNewConversation = async () => {\n    const timestamp = new Date().toLocaleString();\n\n    if (currentConversationIndex !== null) {\n      // Update the existing conversation\n      const updatedConversations = [...savedConversations];\n      updatedConversations[currentConversationIndex].messages = messages.map(msg => ({ role: msg.role, content: msg.content }));\n      updatedConversations[currentConversationIndex].title = `Updated at ${timestamp}`;\n      setSavedConversations(updatedConversations);\n      localStorage.setItem(\"savedConversations\", JSON.stringify(updatedConversations));\n      alert(\"Conversation updated!\");\n    } else {\n      // Save as a new conversation\n      const newConversation = {\n        id: conversationId,\n        title: `Conversation at ${timestamp}`,\n        messages: messages.map(msg => ({ role: msg.role, content: msg.content })),  // Exclude files\n      };\n      setSavedConversations((prev) => [...prev, newConversation]);\n      localStorage.setItem(\"savedConversations\", JSON.stringify([...savedConversations, newConversation]));\n      alert(\"Conversation saved!\");\n    }\n\n    // Start a new conversation\n    setMessages([]);\n    setUploadedFiles([]);\n    const response = await fetch(\"http://localhost:5000/api/start_conversation\", {\n      method: \"POST\",\n    });\n    const data = await response.json();\n    setConversationId(data.conversation_id);\n    setCurrentConversationIndex(null);  // Reset for new conversation\n  };\n\n  const loadConversation = (conversation, index) => {\n    setMessages(conversation.messages);\n    setConversationId(conversation.id);\n    setCurrentConversationIndex(index);  // Track current conversation\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"Sidebar\">\n        <h3>Saved Conversations</h3>\n        {savedConversations.map((conversation, index) => (\n          <div\n            key={conversation.id}\n            className=\"ConversationItem\"\n            onClick={() => loadConversation(conversation, index)}\n          >\n            {conversation.title}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"Main\">\n        <div className=\"Column\">\n          <h3 className=\"Title\">Chat Messages</h3>\n          <div className=\"Content\">\n            {messages.map((el, i) => (\n              <div key={i} className=\"MessageWrapper\">\n                <Message role={el.role} content={el.content} />\n              </div>\n            ))}\n            {loading && <div className=\"Loader\">...</div>}\n            {fileUploaded && <div className=\"FileIndicator\"><FaCheckCircle color=\"green\" /> File Uploaded</div>}\n          </div>\n\n          <Input\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onClick={input ? handleSubmit : undefined}\n            onFileUpload={handleFileUpload}\n            onEnter={input ? handleSubmit : undefined}\n          />\n\n          <div className=\"ButtonContainer\">\n            <button onClick={saveAndStartNewConversation} className=\"SaveButton\">Save and Start New Conversation</button>\n            <button onClick={switchModel} className=\"SwitchButton\">Switch Model</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}