{"ast":null,"code":"var _jsxFileName = \"/Users/manojsahithreddyvanga/Desktop/Testing/chatgpt-clone/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Message from \"./components/Message\";\nimport Input from \"./components/Input\";\nimport \"./App.css\";\nimport { FaFileAlt, FaCheckCircle } from \"react-icons/fa\"; // File icon import\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst models = [{\n  name: \"OpenAI GPT-4\",\n  value: \"openai-gpt-4\"\n}, {\n  name: \"OpenAI GPT-3.5\",\n  value: \"openai-gpt-3.5\"\n}, {\n  name: \"Claude 3.5 Sonnet\",\n  value: \"anthropic-claude-3.5-sonnet\"\n}, {\n  name: \"Claude 3.5 Haiku\",\n  value: \"anthropic-claude-3.5-haiku\"\n}];\nexport default function App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState(() => {\n    const savedMessages = localStorage.getItem(\"messages\");\n    return savedMessages ? JSON.parse(savedMessages) : [];\n  });\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [savedConversations, setSavedConversations] = useState(() => {\n    const saved = localStorage.getItem(\"savedConversations\");\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [conversationId, setConversationId] = useState(null);\n  const [loading, setLoading] = useState(false); // Loader state\n  const [currentConversationIndex, setCurrentConversationIndex] = useState(null); // Track current conversation\n  const [fileUploaded, setFileUploaded] = useState(false); // Track if a file has been uploaded\n  const [selectedModel, setSelectedModel] = useState(models[0].value);\n  const [systemPrompt, setSystemPrompt] = useState(\"\");\n  const [showModelDialog, setShowModelDialog] = useState(true);\n  const initializeConversation = async () => {\n    const response = await fetch(\"http://localhost:5000/api/start_conversation\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        model: selectedModel,\n        system_prompt: systemPrompt || \"You are a helpful assistant.\"\n      })\n    });\n    const data = await response.json();\n    setConversationId(data.conversation_id);\n    setShowModelDialog(false); // Close the dialog after setting up\n  };\n  useEffect(() => {\n    if (!conversationId && !showModelDialog) {\n      initializeConversation();\n    }\n  }, [conversationId, showModelDialog]);\n  useEffect(() => {\n    localStorage.setItem(\"messages\", JSON.stringify(messages));\n  }, [messages]);\n  const handleSubmit = async () => {\n    if (!conversationId) {\n      alert(\"Conversation not initialized properly. Please try again.\");\n      return;\n    }\n    const userMessage = {\n      role: \"user\",\n      content: input,\n      attachedFiles: uploadedFiles.map(file => file.name) // Attach file names temporarily\n    };\n    setMessages([...messages, userMessage]);\n    setInput(\"\"); // Clear input as soon as message is submitted\n    setLoading(true); // Show loader\n\n    try {\n      const formData = new FormData();\n      uploadedFiles.forEach(file => formData.append(\"files\", file));\n      formData.append(\"conversation_id\", conversationId);\n      formData.append(\"user_input\", input);\n      const response = await fetch(\"http://localhost:5000/api/chat_with_files\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      const assistantMessage = {\n        role: \"assistant\",\n        content: data.response\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n      setUploadedFiles([]); // Clear files after the query is done\n      setFileUploaded(false); // Reset file upload indicator\n    } catch (error) {\n      console.error(\"Error during fetch:\", error);\n    } finally {\n      setLoading(false); // Hide loader\n    }\n  };\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    setUploadedFiles(prev => [...prev, file]);\n    setFileUploaded(true); // Indicate that a file has been uploaded\n  };\n  const saveAndStartNewConversation = async () => {\n    const timestamp = new Date().toLocaleString();\n    if (currentConversationIndex !== null) {\n      // Update the existing conversation\n      const updatedConversations = [...savedConversations];\n      updatedConversations[currentConversationIndex].messages = messages.map(msg => ({\n        role: msg.role,\n        content: msg.content\n      }));\n      updatedConversations[currentConversationIndex].title = `Updated at ${timestamp}`;\n      setSavedConversations(updatedConversations);\n      localStorage.setItem(\"savedConversations\", JSON.stringify(updatedConversations));\n      alert(\"Conversation updated!\");\n    } else {\n      // Save as a new conversation\n      const newConversation = {\n        id: conversationId,\n        title: `Conversation at ${timestamp}`,\n        messages: messages.map(msg => ({\n          role: msg.role,\n          content: msg.content\n        })) // Exclude files\n      };\n      setSavedConversations(prev => [...prev, newConversation]);\n      localStorage.setItem(\"savedConversations\", JSON.stringify([...savedConversations, newConversation]));\n      alert(\"Conversation saved!\");\n    }\n\n    // Start a new conversation\n    setMessages([]);\n    setUploadedFiles([]);\n    setShowModelDialog(true); // Reopen model selection for the new conversation\n  };\n  const loadConversation = (conversation, index) => {\n    setMessages(conversation.messages);\n    setConversationId(conversation.id);\n    setCurrentConversationIndex(index); // Track current conversation\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [showModelDialog && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ModelDialogOverlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ModelDialog\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Select Model and Provide System Prompt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedModel,\n          onChange: e => setSelectedModel(e.target.value),\n          children: models.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: model.value,\n            children: model.name\n          }, model.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Enter system prompt (optional)\",\n          value: systemPrompt,\n          onChange: e => setSystemPrompt(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: initializeConversation,\n          children: \"Start Conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this), !showModelDialog && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Saved Conversations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), savedConversations.map((conversation, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ConversationItem\",\n          onClick: () => loadConversation(conversation, index),\n          children: conversation.title\n        }, conversation.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Main\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"Title\",\n            children: \"Chat Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Content\",\n            children: [messages.map((el, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"MessageWrapper\",\n              children: /*#__PURE__*/_jsxDEV(Message, {\n                role: el.role,\n                content: el.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 21\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Loader\",\n              children: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this), fileUploaded && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"FileIndicator\",\n              children: [/*#__PURE__*/_jsxDEV(FaCheckCircle, {\n                color: \"green\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 65\n              }, this), \" File Uploaded\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            value: input,\n            onChange: e => setInput(e.target.value),\n            onClick: input ? handleSubmit : undefined,\n            onFileUpload: handleFileUpload,\n            onEnter: input ? handleSubmit : undefined\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveAndStartNewConversation,\n            className: \"SaveButton\",\n            children: \"Save and Start New Conversation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8v1dbALRaEcSNix92KddfwD+XGg=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Message","Input","FaFileAlt","FaCheckCircle","jsxDEV","_jsxDEV","Fragment","_Fragment","models","name","value","App","_s","input","setInput","messages","setMessages","savedMessages","localStorage","getItem","JSON","parse","uploadedFiles","setUploadedFiles","savedConversations","setSavedConversations","saved","conversationId","setConversationId","loading","setLoading","currentConversationIndex","setCurrentConversationIndex","fileUploaded","setFileUploaded","selectedModel","setSelectedModel","systemPrompt","setSystemPrompt","showModelDialog","setShowModelDialog","initializeConversation","response","fetch","method","headers","body","stringify","model","system_prompt","data","json","conversation_id","setItem","handleSubmit","alert","userMessage","role","content","attachedFiles","map","file","formData","FormData","forEach","append","assistantMessage","prev","error","console","handleFileUpload","e","target","files","saveAndStartNewConversation","timestamp","Date","toLocaleString","updatedConversations","msg","title","newConversation","id","loadConversation","conversation","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","onClick","el","i","color","undefined","onFileUpload","onEnter","_c","$RefreshReg$"],"sources":["/Users/manojsahithreddyvanga/Desktop/Testing/chatgpt-clone/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Message from \"./components/Message\";\nimport Input from \"./components/Input\";\nimport \"./App.css\";\nimport { FaFileAlt, FaCheckCircle } from \"react-icons/fa\";  // File icon import\n\nconst models = [\n  { name: \"OpenAI GPT-4\", value: \"openai-gpt-4\" },\n  { name: \"OpenAI GPT-3.5\", value: \"openai-gpt-3.5\" },\n  { name: \"Claude 3.5 Sonnet\", value: \"anthropic-claude-3.5-sonnet\" },\n  { name: \"Claude 3.5 Haiku\", value: \"anthropic-claude-3.5-haiku\" }\n];\n\nexport default function App() {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState(() => {\n    const savedMessages = localStorage.getItem(\"messages\");\n    return savedMessages ? JSON.parse(savedMessages) : [];\n  });\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [savedConversations, setSavedConversations] = useState(() => {\n    const saved = localStorage.getItem(\"savedConversations\");\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [conversationId, setConversationId] = useState(null);\n  const [loading, setLoading] = useState(false);  // Loader state\n  const [currentConversationIndex, setCurrentConversationIndex] = useState(null); // Track current conversation\n  const [fileUploaded, setFileUploaded] = useState(false);  // Track if a file has been uploaded\n  const [selectedModel, setSelectedModel] = useState(models[0].value);\n  const [systemPrompt, setSystemPrompt] = useState(\"\");\n  const [showModelDialog, setShowModelDialog] = useState(true);\n\n  const initializeConversation = async () => {\n    const response = await fetch(\"http://localhost:5000/api/start_conversation\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        model: selectedModel,\n        system_prompt: systemPrompt || \"You are a helpful assistant.\",\n      }),\n    });\n    const data = await response.json();\n    setConversationId(data.conversation_id);\n    setShowModelDialog(false);  // Close the dialog after setting up\n  };\n\n  useEffect(() => {\n    if (!conversationId && !showModelDialog) {\n      initializeConversation();\n    }\n  }, [conversationId, showModelDialog]);\n\n  useEffect(() => {\n    localStorage.setItem(\"messages\", JSON.stringify(messages));\n  }, [messages]);\n\n  const handleSubmit = async () => {\n    if (!conversationId) {\n      alert(\"Conversation not initialized properly. Please try again.\");\n      return;\n    }\n\n    const userMessage = {\n      role: \"user\",\n      content: input,\n      attachedFiles: uploadedFiles.map((file) => file.name),  // Attach file names temporarily\n    };\n\n    setMessages([...messages, userMessage]);\n    setInput(\"\");  // Clear input as soon as message is submitted\n    setLoading(true);  // Show loader\n\n    try {\n      const formData = new FormData();\n      uploadedFiles.forEach(file => formData.append(\"files\", file));\n      formData.append(\"conversation_id\", conversationId);\n      formData.append(\"user_input\", input);\n\n      const response = await fetch(\"http://localhost:5000/api/chat_with_files\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      const data = await response.json();\n      const assistantMessage = { role: \"assistant\", content: data.response };\n\n      setMessages((prev) => [...prev, assistantMessage]);\n      setUploadedFiles([]);  // Clear files after the query is done\n      setFileUploaded(false);  // Reset file upload indicator\n    } catch (error) {\n      console.error(\"Error during fetch:\", error);\n    } finally {\n      setLoading(false);  // Hide loader\n    }\n  };\n\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    setUploadedFiles((prev) => [...prev, file]);\n    setFileUploaded(true);  // Indicate that a file has been uploaded\n  };\n\n  const saveAndStartNewConversation = async () => {\n    const timestamp = new Date().toLocaleString();\n\n    if (currentConversationIndex !== null) {\n      // Update the existing conversation\n      const updatedConversations = [...savedConversations];\n      updatedConversations[currentConversationIndex].messages = messages.map(msg => ({ role: msg.role, content: msg.content }));\n      updatedConversations[currentConversationIndex].title = `Updated at ${timestamp}`;\n      setSavedConversations(updatedConversations);\n      localStorage.setItem(\"savedConversations\", JSON.stringify(updatedConversations));\n      alert(\"Conversation updated!\");\n    } else {\n      // Save as a new conversation\n      const newConversation = {\n        id: conversationId,\n        title: `Conversation at ${timestamp}`,\n        messages: messages.map(msg => ({ role: msg.role, content: msg.content })),  // Exclude files\n      };\n      setSavedConversations((prev) => [...prev, newConversation]);\n      localStorage.setItem(\"savedConversations\", JSON.stringify([...savedConversations, newConversation]));\n      alert(\"Conversation saved!\");\n    }\n\n    // Start a new conversation\n    setMessages([]);\n    setUploadedFiles([]);\n    setShowModelDialog(true);  // Reopen model selection for the new conversation\n  };\n\n  const loadConversation = (conversation, index) => {\n    setMessages(conversation.messages);\n    setConversationId(conversation.id);\n    setCurrentConversationIndex(index);  // Track current conversation\n  };\n\n  return (\n    <div className=\"App\">\n      {showModelDialog && (\n        <div className=\"ModelDialogOverlay\">\n          <div className=\"ModelDialog\">\n            <h2>Select Model and Provide System Prompt</h2>\n            <select value={selectedModel} onChange={(e) => setSelectedModel(e.target.value)}>\n              {models.map((model) => (\n                <option key={model.value} value={model.value}>\n                  {model.name}\n                </option>\n              ))}\n            </select>\n            <textarea\n              placeholder=\"Enter system prompt (optional)\"\n              value={systemPrompt}\n              onChange={(e) => setSystemPrompt(e.target.value)}\n            />\n            <button onClick={initializeConversation}>Start Conversation</button>\n          </div>\n        </div>\n      )}\n\n      {!showModelDialog && (\n        <>\n          <div className=\"Sidebar\">\n            <h3>Saved Conversations</h3>\n            {savedConversations.map((conversation, index) => (\n              <div\n                key={conversation.id}\n                className=\"ConversationItem\"\n                onClick={() => loadConversation(conversation, index)}\n              >\n                {conversation.title}\n              </div>\n            ))}\n          </div>\n\n          <div className=\"Main\">\n            <div className=\"Column\">\n              <h3 className=\"Title\">Chat Messages</h3>\n              <div className=\"Content\">\n                {messages.map((el, i) => (\n                  <div key={i} className=\"MessageWrapper\">\n                    <Message role={el.role} content={el.content} />\n                  </div>\n                ))}\n                {loading && <div className=\"Loader\">...</div>}\n                {fileUploaded && <div className=\"FileIndicator\"><FaCheckCircle color=\"green\" /> File Uploaded</div>}\n              </div>\n\n              <Input\n                value={input}\n                onChange={(e) => setInput(e.target.value)}\n                onClick={input ? handleSubmit : undefined}\n                onFileUpload={handleFileUpload}\n                onEnter={input ? handleSubmit : undefined}\n              />\n\n              <button onClick={saveAndStartNewConversation} className=\"SaveButton\">Save and Start New Conversation</button>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}