{"ast":null,"code":"var _jsxFileName = \"/Users/manojsahithreddyvanga/Desktop/Testing/chatgpt-clone/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Message from \"./components/Message\";\nimport Input from \"./components/Input\";\nimport History from \"./components/History\";\nimport Clear from \"./components/Clear\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [history, setHistory] = useState([]);\n  const handleSubmit = async () => {\n    const prompt = {\n      role: \"user\",\n      content: input\n    };\n    setMessages([...messages, prompt]);\n    await fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        model: \"gpt-3.5-turbo\",\n        messages: [...messages, prompt]\n      })\n    }).then(data => data.json()).then(data => {\n      const res = data.choices[0].message.content;\n      setMessages(messages => [...messages, {\n        role: \"assistant\",\n        content: res\n      }]);\n      setHistory(history => [...history, {\n        question: input,\n        answer: res\n      }]);\n      setInput(\"\");\n    });\n  };\n  const clear = () => {\n    setMessages([]);\n    setHistory([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Title\",\n        children: \"Chat Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Content\",\n        children: messages.map((el, i) => {\n          return /*#__PURE__*/_jsxDEV(Message, {\n            role: el.role,\n            content: el.content\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onClick: input ? handleSubmit : undefined\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Title\",\n        children: \"History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Content\",\n        children: history.map((el, i) => {\n          return /*#__PURE__*/_jsxDEV(History, {\n            question: el.question,\n            onClick: () => setMessages([{\n              role: \"user\",\n              content: history[i].question\n            }, {\n              role: \"assistant\",\n              content: history[i].answer\n            }])\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Clear, {\n        onClick: clear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WJ+PR8KKBtOLBOf8DqDAM2H2PfM=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Message","Input","History","Clear","jsxDEV","_jsxDEV","App","_s","input","setInput","messages","setMessages","history","setHistory","handleSubmit","prompt","role","content","fetch","method","headers","Authorization","process","env","REACT_APP_OPENAI_API_KEY","body","JSON","stringify","model","then","data","json","res","choices","message","question","answer","clear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","el","i","value","onChange","e","target","onClick","undefined","_c","$RefreshReg$"],"sources":["/Users/manojsahithreddyvanga/Desktop/Testing/chatgpt-clone/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport Message from \"./components/Message\";\nimport Input from \"./components/Input\";\nimport History from \"./components/History\";\nimport Clear from \"./components/Clear\";\n\nimport \"./App.css\";\n\nexport default function App() {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [history, setHistory] = useState([]);\n  const handleSubmit = async () => {\n    const prompt = {\n      role: \"user\",\n      content: input,\n    };\n\n    setMessages([...messages, prompt]);\n\n    await fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        model: \"gpt-3.5-turbo\",\n        messages: [...messages, prompt],\n      }),\n    })\n      .then((data) => data.json())\n      .then((data) => {\n        const res = data.choices[0].message.content;\n        setMessages((messages) => [\n          ...messages,\n          {\n            role: \"assistant\",\n            content: res,\n          },\n        ]);\n        setHistory((history) => [...history, { question: input, answer: res }]);\n        setInput(\"\");\n      });\n  };\n\n  const clear = () => {\n    setMessages([]);\n    setHistory([]);\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"Column\">\n        <h3 className=\"Title\">Chat Messages</h3>\n        <div className=\"Content\">\n          {messages.map((el, i) => {\n            return <Message key={i} role={el.role} content={el.content} />;\n          })}\n        </div>\n        <Input\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onClick={input ? handleSubmit : undefined}\n        />\n      </div>\n      <div className=\"Column\">\n        <h3 className=\"Title\">History</h3>\n        <div className=\"Content\">\n          {history.map((el, i) => {\n            return (\n              <History\n                key={i}\n                question={el.question}\n                onClick={() =>\n                  setMessages([\n                    { role: \"user\", content: history[i].question },\n                    { role: \"assistant\", content: history[i].answer },\n                  ])\n                }\n              />\n            );\n          })}\n        </div>\n        <Clear onClick={clear} />\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}