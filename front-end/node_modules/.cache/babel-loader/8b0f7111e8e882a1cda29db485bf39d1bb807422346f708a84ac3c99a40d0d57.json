{"ast":null,"code":"var _jsxFileName = \"/Users/manojsahithreddyvanga/Desktop/Testing/chatgpt-clone/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Message from \"./components/Message\";\nimport Input from \"./components/Input\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [savedConversations, setSavedConversations] = useState([]);\n  const [conversationId, setConversationId] = useState(null);\n  useEffect(() => {\n    loadConversations();\n  }, []);\n  const loadConversations = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/load_conversations\");\n      const data = await response.json();\n      setSavedConversations(data);\n    } catch (error) {\n      console.error(\"Error loading conversations:\", error);\n    }\n  };\n  const loadConversation = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/load_conversation/${id}`);\n      const data = await response.json();\n      setConversationId(id);\n      setMessages(data);\n    } catch (error) {\n      console.error(\"Error loading conversation:\", error);\n    }\n  };\n  const startNewConversation = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/start_conversation\", {\n        method: \"POST\"\n      });\n      const data = await response.json();\n      setConversationId(data.conversation_id);\n      setMessages([]);\n    } catch (error) {\n      console.error(\"Error starting new conversation:\", error);\n    }\n  };\n  const handleSubmit = async () => {\n    const userMessage = {\n      role: \"user\",\n      content: input\n    };\n    setMessages([...messages, userMessage]);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_input: input,\n          conversation_id: conversationId\n        })\n      });\n      const data = await response.json();\n      const assistantMessage = {\n        role: \"assistant\",\n        content: data.response\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n      setInput(\"\");\n    } catch (error) {\n      console.error(\"Error during fetch:\", error);\n    }\n  };\n  const saveConversation = async () => {\n    const title = prompt(\"Enter a title for this conversation:\");\n    if (!title) return;\n    try {\n      await fetch(\"http://localhost:5000/api/save_conversation\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          conversation_id: conversationId,\n          title,\n          messages\n        })\n      });\n      alert(\"Conversation saved!\");\n      loadConversations(); // Refresh conversation list\n    } catch (error) {\n      console.error(\"Error saving conversation:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Saved Conversations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), savedConversations.map(conversation => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => loadConversation(conversation.id),\n        className: \"ConversationItem\",\n        children: conversation.title\n      }, conversation.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startNewConversation,\n        className: \"NewConversationButton\",\n        children: \"Start New Conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Content\",\n        children: messages.map((el, i) => /*#__PURE__*/_jsxDEV(Message, {\n          role: el.role,\n          content: el.content\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onClick: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveConversation,\n        className: \"SaveButton\",\n        children: \"Save Conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BCKD/vXBXdVZmlAtYDX5yJSM/08=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Message","Input","jsxDEV","_jsxDEV","App","_s","input","setInput","messages","setMessages","savedConversations","setSavedConversations","conversationId","setConversationId","loadConversations","response","fetch","data","json","error","console","loadConversation","id","startNewConversation","method","conversation_id","handleSubmit","userMessage","role","content","headers","body","JSON","stringify","user_input","assistantMessage","prev","saveConversation","title","prompt","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","conversation","onClick","el","i","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/manojsahithreddyvanga/Desktop/Testing/chatgpt-clone/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Message from \"./components/Message\";\nimport Input from \"./components/Input\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [savedConversations, setSavedConversations] = useState([]);\n  const [conversationId, setConversationId] = useState(null);\n\n  useEffect(() => {\n    loadConversations();\n  }, []);\n\n  const loadConversations = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/load_conversations\");\n      const data = await response.json();\n      setSavedConversations(data);\n    } catch (error) {\n      console.error(\"Error loading conversations:\", error);\n    }\n  };\n\n  const loadConversation = async (id) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/load_conversation/${id}`);\n      const data = await response.json();\n      setConversationId(id);\n      setMessages(data);\n    } catch (error) {\n      console.error(\"Error loading conversation:\", error);\n    }\n  };\n\n  const startNewConversation = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/start_conversation\", {\n        method: \"POST\",\n      });\n      const data = await response.json();\n      setConversationId(data.conversation_id);\n      setMessages([]);\n    } catch (error) {\n      console.error(\"Error starting new conversation:\", error);\n    }\n  };\n\n  const handleSubmit = async () => {\n    const userMessage = { role: \"user\", content: input };\n    setMessages([...messages, userMessage]);\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/chat\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ user_input: input, conversation_id: conversationId }),\n      });\n      const data = await response.json();\n      const assistantMessage = { role: \"assistant\", content: data.response };\n      setMessages((prev) => [...prev, assistantMessage]);\n      setInput(\"\");\n    } catch (error) {\n      console.error(\"Error during fetch:\", error);\n    }\n  };\n\n  const saveConversation = async () => {\n    const title = prompt(\"Enter a title for this conversation:\");\n    if (!title) return;\n\n    try {\n      await fetch(\"http://localhost:5000/api/save_conversation\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          conversation_id: conversationId,\n          title,\n          messages,\n        }),\n      });\n      alert(\"Conversation saved!\");\n      loadConversations();  // Refresh conversation list\n    } catch (error) {\n      console.error(\"Error saving conversation:\", error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"Sidebar\">\n        <h3>Saved Conversations</h3>\n        {savedConversations.map((conversation) => (\n          <div key={conversation.id} onClick={() => loadConversation(conversation.id)} className=\"ConversationItem\">\n            {conversation.title}\n          </div>\n        ))}\n        <button onClick={startNewConversation} className=\"NewConversationButton\">Start New Conversation</button>\n      </div>\n\n      <div className=\"Main\">\n        <div className=\"Content\">\n          {messages.map((el, i) => (\n            <Message key={i} role={el.role} content={el.content} />\n          ))}\n        </div>\n\n        <Input\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onClick={handleSubmit}\n        />\n        <button onClick={saveConversation} className=\"SaveButton\">Save Conversation</button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}