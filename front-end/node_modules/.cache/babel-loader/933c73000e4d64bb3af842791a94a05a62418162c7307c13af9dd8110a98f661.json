{"ast":null,"code":"var _jsxFileName = \"/Users/manojsahithreddyvanga/Desktop/Testing/chatgpt-clone/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Message from \"./components/Message\";\nimport Input from \"./components/Input\";\nimport History from \"./components/History\";\nimport Clear from \"./components/Clear\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [systemPrompt, setSystemPrompt] = useState(\"\");\n  const [isSystemPromptEntered, setIsSystemPromptEntered] = useState(false);\n  const handleSubmit = async () => {\n    if (!isSystemPromptEntered) {\n      setSystemPrompt(input);\n      setIsSystemPromptEntered(true);\n      setInput(\"\"); // Clear input after setting the system prompt\n      return;\n    }\n    const prompt = {\n      role: \"user\",\n      content: input\n    };\n    setMessages([...messages, prompt]);\n    await fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        model: \"gpt-3.5-turbo\",\n        messages: [{\n          role: \"system\",\n          content: systemPrompt\n        }, ...messages, prompt]\n      })\n    }).then(data => data.json()).then(data => {\n      const res = data.choices[0].message.content;\n      setMessages(messages => [...messages, {\n        role: \"assistant\",\n        content: res\n      }]);\n      setHistory(history => [...history, {\n        question: input,\n        answer: res\n      }]);\n      setInput(\"\");\n    });\n  };\n  const clear = () => {\n    setMessages([]);\n    setHistory([]);\n    setSystemPrompt(\"\");\n    setIsSystemPromptEntered(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Title\",\n        children: \"Chat Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Content\",\n        children: messages.map((el, i) => /*#__PURE__*/_jsxDEV(Message, {\n          role: el.role,\n          content: el.content\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: input,\n        placeholder: !isSystemPromptEntered ? \"Enter system prompt...\" : \"Your prompt here...\",\n        onChange: e => setInput(e.target.value),\n        onClick: input ? handleSubmit : undefined\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Title\",\n        children: \"History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Content\",\n        children: history.map((el, i) => /*#__PURE__*/_jsxDEV(History, {\n          question: el.question,\n          onClick: () => setMessages([{\n            role: \"user\",\n            content: history[i].question\n          }, {\n            role: \"assistant\",\n            content: history[i].answer\n          }])\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Clear, {\n        onClick: clear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"w5On+y1iFOgdGQTpG3JP6LAlUaw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Message","Input","History","Clear","jsxDEV","_jsxDEV","App","_s","input","setInput","messages","setMessages","history","setHistory","systemPrompt","setSystemPrompt","isSystemPromptEntered","setIsSystemPromptEntered","handleSubmit","prompt","role","content","fetch","method","headers","Authorization","process","env","REACT_APP_OPENAI_API_KEY","body","JSON","stringify","model","then","data","json","res","choices","message","question","answer","clear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","el","i","value","placeholder","onChange","e","target","onClick","undefined","_c","$RefreshReg$"],"sources":["/Users/manojsahithreddyvanga/Desktop/Testing/chatgpt-clone/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Message from \"./components/Message\";\nimport Input from \"./components/Input\";\nimport History from \"./components/History\";\nimport Clear from \"./components/Clear\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [history, setHistory] = useState([]);\n  const [systemPrompt, setSystemPrompt] = useState(\"\");\n  const [isSystemPromptEntered, setIsSystemPromptEntered] = useState(false);\n\n  const handleSubmit = async () => {\n    if (!isSystemPromptEntered) {\n      setSystemPrompt(input);\n      setIsSystemPromptEntered(true);\n      setInput(\"\"); // Clear input after setting the system prompt\n      return;\n    }\n\n    const prompt = {\n      role: \"user\",\n      content: input,\n    };\n\n    setMessages([...messages, prompt]);\n\n    await fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        model: \"gpt-3.5-turbo\",\n        messages: [\n          { role: \"system\", content: systemPrompt },\n          ...messages,\n          prompt,\n        ],\n      }),\n    })\n      .then((data) => data.json())\n      .then((data) => {\n        const res = data.choices[0].message.content;\n        setMessages((messages) => [\n          ...messages,\n          {\n            role: \"assistant\",\n            content: res,\n          },\n        ]);\n        setHistory((history) => [...history, { question: input, answer: res }]);\n        setInput(\"\");\n      });\n  };\n\n  const clear = () => {\n    setMessages([]);\n    setHistory([]);\n    setSystemPrompt(\"\");\n    setIsSystemPromptEntered(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"Column\">\n        <h3 className=\"Title\">Chat Messages</h3>\n        <div className=\"Content\">\n          {messages.map((el, i) => (\n            <Message key={i} role={el.role} content={el.content} />\n          ))}\n        </div>\n        <Input\n          value={input}\n          placeholder={\n            !isSystemPromptEntered ? \"Enter system prompt...\" : \"Your prompt here...\"\n          }\n          onChange={(e) => setInput(e.target.value)}\n          onClick={input ? handleSubmit : undefined}\n        />\n      </div>\n      <div className=\"Column\">\n        <h3 className=\"Title\">History</h3>\n        <div className=\"Content\">\n          {history.map((el, i) => (\n            <History\n              key={i}\n              question={el.question}\n              onClick={() =>\n                setMessages([\n                  { role: \"user\", content: history[i].question },\n                  { role: \"assistant\", content: history[i].answer },\n                ])\n              }\n            />\n          ))}\n        </div>\n        <Clear onClick={clear} />\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}