{"ast":null,"code":"var _jsxFileName = \"/Users/manojsahithreddyvanga/Desktop/Testing/chatgpt-clone/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Message from \"./components/Message\";\nimport Input from \"./components/Input\";\nimport History from \"./components/History\";\nimport Clear from \"./components/Clear\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [systemPrompt, setSystemPrompt] = useState(\"You are a helpful assistant.\");\n  const [messages, setMessages] = useState([]);\n  const [history, setHistory] = useState([]);\n  const handleSubmit = async () => {\n    const payload = {\n      model: \"gpt-3.5-turbo\",\n      system_prompt: systemPrompt,\n      user_input: input\n    };\n    try {\n      const response = await fetch(\"http://localhost:5000/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      const data = await response.json();\n      if (data.error) {\n        alert(data.error);\n      } else {\n        const assistantMessage = {\n          role: \"assistant\",\n          content: data.response\n        };\n        setMessages(prev => [...prev, {\n          role: \"user\",\n          content: input\n        }, assistantMessage]);\n        setHistory(prev => [...prev, {\n          question: input,\n          answer: data.response\n        }]);\n        setInput(\"\");\n      }\n    } catch (error) {\n      console.error(\"Error during fetch:\", error);\n    }\n  };\n  const clear = () => {\n    setMessages([]);\n    setHistory([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Title\",\n        children: \"Chat Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Content\",\n        children: messages.map((el, i) => /*#__PURE__*/_jsxDEV(Message, {\n          role: el.role,\n          content: el.content\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onClick: input ? handleSubmit : undefined\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Title\",\n        children: \"History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Content\",\n        children: history.map((el, i) => /*#__PURE__*/_jsxDEV(History, {\n          question: el.question,\n          onClick: () => setMessages([{\n            role: \"user\",\n            content: history[i].question\n          }, {\n            role: \"assistant\",\n            content: history[i].answer\n          }])\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Clear, {\n        onClick: clear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dRWkyqvntJl41M5ZSWyU3LMGcZI=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Message","Input","History","Clear","jsxDEV","_jsxDEV","App","_s","input","setInput","systemPrompt","setSystemPrompt","messages","setMessages","history","setHistory","handleSubmit","payload","model","system_prompt","user_input","response","fetch","method","headers","body","JSON","stringify","data","json","error","alert","assistantMessage","role","content","prev","question","answer","console","clear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","el","i","value","onChange","e","target","onClick","undefined","_c","$RefreshReg$"],"sources":["/Users/manojsahithreddyvanga/Desktop/Testing/chatgpt-clone/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Message from \"./components/Message\";\nimport Input from \"./components/Input\";\nimport History from \"./components/History\";\nimport Clear from \"./components/Clear\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [input, setInput] = useState(\"\");\n  const [systemPrompt, setSystemPrompt] = useState(\"You are a helpful assistant.\");\n  const [messages, setMessages] = useState([]);\n  const [history, setHistory] = useState([]);\n\n  const handleSubmit = async () => {\n    const payload = {\n      model: \"gpt-3.5-turbo\",\n      system_prompt: systemPrompt,\n      user_input: input,\n    };\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload),\n      });\n\n      const data = await response.json();\n\n      if (data.error) {\n        alert(data.error);\n      } else {\n        const assistantMessage = {\n          role: \"assistant\",\n          content: data.response,\n        };\n\n        setMessages((prev) => [\n          ...prev,\n          { role: \"user\", content: input },\n          assistantMessage,\n        ]);\n\n        setHistory((prev) => [...prev, { question: input, answer: data.response }]);\n        setInput(\"\");\n      }\n    } catch (error) {\n      console.error(\"Error during fetch:\", error);\n    }\n  };\n\n  const clear = () => {\n    setMessages([]);\n    setHistory([]);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"Column\">\n        <h3 className=\"Title\">Chat Messages</h3>\n        <div className=\"Content\">\n          {messages.map((el, i) => (\n            <Message key={i} role={el.role} content={el.content} />\n          ))}\n        </div>\n        <Input\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onClick={input ? handleSubmit : undefined}\n        />\n      </div>\n      <div className=\"Column\">\n        <h3 className=\"Title\">History</h3>\n        <div className=\"Content\">\n          {history.map((el, i) => (\n            <History\n              key={i}\n              question={el.question}\n              onClick={() =>\n                setMessages([\n                  { role: \"user\", content: history[i].question },\n                  { role: \"assistant\", content: history[i].answer },\n                ])\n              }\n            />\n          ))}\n        </div>\n        <Clear onClick={clear} />\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,8BAA8B,CAAC;EAChF,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMiB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,OAAO,GAAG;MACdC,KAAK,EAAE,eAAe;MACtBC,aAAa,EAAET,YAAY;MAC3BU,UAAU,EAAEZ;IACd,CAAC;IAED,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACV,OAAO;MAC9B,CAAC,CAAC;MAEF,MAAMW,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,KAAK,EAAE;QACdC,KAAK,CAACH,IAAI,CAACE,KAAK,CAAC;MACnB,CAAC,MAAM;QACL,MAAME,gBAAgB,GAAG;UACvBC,IAAI,EAAE,WAAW;UACjBC,OAAO,EAAEN,IAAI,CAACP;QAChB,CAAC;QAEDR,WAAW,CAAEsB,IAAI,IAAK,CACpB,GAAGA,IAAI,EACP;UAAEF,IAAI,EAAE,MAAM;UAAEC,OAAO,EAAE1B;QAAM,CAAC,EAChCwB,gBAAgB,CACjB,CAAC;QAEFjB,UAAU,CAAEoB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;UAAEC,QAAQ,EAAE5B,KAAK;UAAE6B,MAAM,EAAET,IAAI,CAACP;QAAS,CAAC,CAAC,CAAC;QAC3EZ,QAAQ,CAAC,EAAE,CAAC;MACd;IACF,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACdQ,OAAO,CAACR,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,MAAMS,KAAK,GAAGA,CAAA,KAAM;IAClB1B,WAAW,CAAC,EAAE,CAAC;IACfE,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACEV,OAAA;IAAKmC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpC,OAAA;MAAKmC,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBpC,OAAA;QAAImC,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxCxC,OAAA;QAAKmC,SAAS,EAAC,SAAS;QAAAC,QAAA,EACrB7B,QAAQ,CAACkC,GAAG,CAAC,CAACC,EAAE,EAAEC,CAAC,kBAClB3C,OAAA,CAACL,OAAO;UAASiC,IAAI,EAAEc,EAAE,CAACd,IAAK;UAACC,OAAO,EAAEa,EAAE,CAACb;QAAQ,GAAtCc,CAAC;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAuC,CACvD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNxC,OAAA,CAACJ,KAAK;QACJgD,KAAK,EAAEzC,KAAM;QACb0C,QAAQ,EAAGC,CAAC,IAAK1C,QAAQ,CAAC0C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC1CI,OAAO,EAAE7C,KAAK,GAAGQ,YAAY,GAAGsC;MAAU;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNxC,OAAA;MAAKmC,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBpC,OAAA;QAAImC,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClCxC,OAAA;QAAKmC,SAAS,EAAC,SAAS;QAAAC,QAAA,EACrB3B,OAAO,CAACgC,GAAG,CAAC,CAACC,EAAE,EAAEC,CAAC,kBACjB3C,OAAA,CAACH,OAAO;UAENkC,QAAQ,EAAEW,EAAE,CAACX,QAAS;UACtBiB,OAAO,EAAEA,CAAA,KACPxC,WAAW,CAAC,CACV;YAAEoB,IAAI,EAAE,MAAM;YAAEC,OAAO,EAAEpB,OAAO,CAACkC,CAAC,CAAC,CAACZ;UAAS,CAAC,EAC9C;YAAEH,IAAI,EAAE,WAAW;YAAEC,OAAO,EAAEpB,OAAO,CAACkC,CAAC,CAAC,CAACX;UAAO,CAAC,CAClD;QACF,GAPIW,CAAC;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQP,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNxC,OAAA,CAACF,KAAK;QAACkD,OAAO,EAAEd;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtC,EAAA,CAtFuBD,GAAG;AAAAiD,EAAA,GAAHjD,GAAG;AAAA,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}