{"ast":null,"code":"var _jsxFileName = \"/Users/manojsahithreddyvanga/Desktop/Testing/front-end/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Message from \"./components/Message\";\nimport Input from \"./components/Input\";\nimport \"./App.css\";\nimport { FaFileAlt, FaCheckCircle } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState(() => {\n    const savedMessages = localStorage.getItem(\"messages\");\n    return savedMessages ? JSON.parse(savedMessages) : [];\n  });\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [savedConversations, setSavedConversations] = useState(() => {\n    const saved = localStorage.getItem(\"savedConversations\");\n    return saved ? JSON.parse(savedConversations) : [];\n  });\n  const [conversationId, setConversationId] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [currentConversationIndex, setCurrentConversationIndex] = useState(null);\n  const [fileUploaded, setFileUploaded] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isSystemPrompt, setIsSystemPrompt] = useState(true);\n  const [selectedModel, setSelectedModel] = useState(\"GPT-4\"); // Default model\n  const [modelLocked, setModelLocked] = useState(false); // Lock model selection once conversation starts\n\n  useEffect(() => {\n    const initializeConversation = async () => {\n      const response = await fetch(\"http://localhost:5000/api/start_conversation\", {\n        method: \"POST\"\n      });\n      const data = await response.json();\n      setConversationId(data.conversation_id);\n    };\n    if (!conversationId) {\n      initializeConversation();\n    }\n  }, [conversationId]);\n  useEffect(() => {\n    localStorage.setItem(\"messages\", JSON.stringify(messages));\n  }, [messages]);\n  const handleModelChange = e => {\n    if (!modelLocked) {\n      setSelectedModel(e.target.value);\n    }\n  };\n  const handleSubmit = async () => {\n    if (!conversationId) {\n      alert(\"Conversation not initialized properly. Please try again.\");\n      return;\n    }\n    const userMessage = {\n      role: \"user\",\n      content: input,\n      isSystemPrompt: isSystemPrompt\n    };\n    setMessages([...messages, userMessage]);\n    setInput(\"\");\n    if (isSystemPrompt) {\n      setIsSystemPrompt(false);\n      setModelLocked(true); // Lock model selection once the first message is sent\n      return;\n    }\n    setLoading(true);\n    try {\n      const formData = new FormData();\n      uploadedFiles.forEach(file => formData.append(\"files\", file));\n      formData.append(\"conversation_id\", conversationId);\n      formData.append(\"user_input\", input);\n      formData.append(\"model\", selectedModel); // Include model selection in the request\n\n      const response = await fetch(\"http://localhost:5000/api/chat_with_files\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      const assistantMessage = {\n        role: \"assistant\",\n        content: data.response\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n      setUploadedFiles([]);\n      setFileUploaded(false);\n      setErrorMessage(\"\");\n    } catch (error) {\n      console.error(\"Error during fetch:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    if (file.type !== \"application/pdf\") {\n      setErrorMessage(\"Only PDF files are allowed.\");\n      return;\n    }\n    setUploadedFiles(prev => [...prev, file]);\n    setFileUploaded(true);\n    setErrorMessage(\"\");\n  };\n  const saveAndStartNewConversation = async () => {\n    const timestamp = new Date().toLocaleString();\n    if (currentConversationIndex !== null) {\n      const updatedConversations = [...savedConversations];\n      updatedConversations[currentConversationIndex].messages = messages.map(msg => ({\n        role: msg.role,\n        content: msg.content\n      }));\n      updatedConversations[currentConversationIndex].title = `Updated at ${timestamp}`;\n      setSavedConversations(updatedConversations);\n      localStorage.setItem(\"savedConversations\", JSON.stringify(updatedConversations));\n      alert(\"Conversation updated!\");\n    } else {\n      const newConversation = {\n        id: conversationId,\n        title: `Conversation at ${timestamp}`,\n        messages: messages.map(msg => ({\n          role: msg.role,\n          content: msg.content\n        }))\n      };\n      setSavedConversations(prev => [...prev, newConversation]);\n      localStorage.setItem(\"savedConversations\", JSON.stringify([...savedConversations, newConversation]));\n      alert(\"Conversation saved!\");\n    }\n    setMessages([]);\n    setUploadedFiles([]);\n    setIsSystemPrompt(true);\n    setModelLocked(false); // Unlock model selection for the new conversation\n    const response = await fetch(\"http://localhost:5000/api/start_conversation\", {\n      method: \"POST\"\n    });\n    const data = await response.json();\n    setConversationId(data.conversation_id);\n    setCurrentConversationIndex(null);\n  };\n  const loadConversation = (conversation, index) => {\n    setMessages(conversation.messages);\n    setConversationId(conversation.id);\n    setCurrentConversationIndex(index);\n    setIsSystemPrompt(conversation.messages.length === 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Saved Conversations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), savedConversations.map((conversation, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ConversationItem\",\n        onClick: () => loadConversation(conversation, index),\n        children: conversation.title\n      }, conversation.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Header\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"modelSelect\",\n          children: \"Select Model:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"modelSelect\",\n          value: selectedModel,\n          onChange: handleModelChange,\n          disabled: modelLocked,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"GPT-4\",\n            children: \"GPT-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Claude 3.5 Sonnet\",\n            children: \"Claude 3.5 Sonnet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Content\",\n        children: [messages.map((el, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"MessageWrapper\",\n          children: /*#__PURE__*/_jsxDEV(Message, {\n            role: el.role,\n            content: el.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Loader\",\n          children: \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 23\n        }, this), fileUploaded && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FileIndicator\",\n          children: [/*#__PURE__*/_jsxDEV(FaCheckCircle, {\n            color: \"green\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 59\n          }, this), \" File Uploaded\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 28\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ErrorIndicator\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        isSystemPrompt: isSystemPrompt,\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onClick: input ? handleSubmit : undefined,\n        onFileUpload: handleFileUpload,\n        onEnter: input ? handleSubmit : undefined\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveAndStartNewConversation,\n        className: \"SaveButton\",\n        children: \"Save and Start New Conversation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wBDIRGSFngHpgYaVu6rqK0gR7jk=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Message","Input","FaFileAlt","FaCheckCircle","jsxDEV","_jsxDEV","App","_s","input","setInput","messages","setMessages","savedMessages","localStorage","getItem","JSON","parse","uploadedFiles","setUploadedFiles","savedConversations","setSavedConversations","saved","conversationId","setConversationId","loading","setLoading","currentConversationIndex","setCurrentConversationIndex","fileUploaded","setFileUploaded","errorMessage","setErrorMessage","isSystemPrompt","setIsSystemPrompt","selectedModel","setSelectedModel","modelLocked","setModelLocked","initializeConversation","response","fetch","method","data","json","conversation_id","setItem","stringify","handleModelChange","e","target","value","handleSubmit","alert","userMessage","role","content","formData","FormData","forEach","file","append","body","assistantMessage","prev","error","console","handleFileUpload","files","type","saveAndStartNewConversation","timestamp","Date","toLocaleString","updatedConversations","map","msg","title","newConversation","id","loadConversation","conversation","index","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","onChange","disabled","el","i","color","undefined","onFileUpload","onEnter","_c","$RefreshReg$"],"sources":["/Users/manojsahithreddyvanga/Desktop/Testing/front-end/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Message from \"./components/Message\";\nimport Input from \"./components/Input\";\nimport \"./App.css\";\nimport { FaFileAlt, FaCheckCircle } from \"react-icons/fa\";\n\nexport default function App() {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState(() => {\n    const savedMessages = localStorage.getItem(\"messages\");\n    return savedMessages ? JSON.parse(savedMessages) : [];\n  });\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [savedConversations, setSavedConversations] = useState(() => {\n    const saved = localStorage.getItem(\"savedConversations\");\n    return saved ? JSON.parse(savedConversations) : [];\n  });\n  const [conversationId, setConversationId] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [currentConversationIndex, setCurrentConversationIndex] = useState(null);\n  const [fileUploaded, setFileUploaded] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isSystemPrompt, setIsSystemPrompt] = useState(true);\n  const [selectedModel, setSelectedModel] = useState(\"GPT-4\");  // Default model\n  const [modelLocked, setModelLocked] = useState(false);  // Lock model selection once conversation starts\n\n  useEffect(() => {\n    const initializeConversation = async () => {\n      const response = await fetch(\"http://localhost:5000/api/start_conversation\", {\n        method: \"POST\",\n      });\n      const data = await response.json();\n      setConversationId(data.conversation_id);\n    };\n\n    if (!conversationId) {\n      initializeConversation();\n    }\n  }, [conversationId]);\n\n  useEffect(() => {\n    localStorage.setItem(\"messages\", JSON.stringify(messages));\n  }, [messages]);\n\n  const handleModelChange = (e) => {\n    if (!modelLocked) {\n      setSelectedModel(e.target.value);\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!conversationId) {\n      alert(\"Conversation not initialized properly. Please try again.\");\n      return;\n    }\n\n    const userMessage = { role: \"user\", content: input, isSystemPrompt: isSystemPrompt };\n\n    setMessages([...messages, userMessage]);\n    setInput(\"\");\n\n    if (isSystemPrompt) {\n      setIsSystemPrompt(false);\n      setModelLocked(true);  // Lock model selection once the first message is sent\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const formData = new FormData();\n      uploadedFiles.forEach((file) => formData.append(\"files\", file));\n      formData.append(\"conversation_id\", conversationId);\n      formData.append(\"user_input\", input);\n      formData.append(\"model\", selectedModel);  // Include model selection in the request\n\n      const response = await fetch(\"http://localhost:5000/api/chat_with_files\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      const data = await response.json();\n      const assistantMessage = { role: \"assistant\", content: data.response };\n\n      setMessages((prev) => [...prev, assistantMessage]);\n      setUploadedFiles([]);\n      setFileUploaded(false);\n      setErrorMessage(\"\");\n    } catch (error) {\n      console.error(\"Error during fetch:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    if (file.type !== \"application/pdf\") {\n      setErrorMessage(\"Only PDF files are allowed.\");\n      return;\n    }\n\n    setUploadedFiles((prev) => [...prev, file]);\n    setFileUploaded(true);\n    setErrorMessage(\"\");\n  };\n\n  const saveAndStartNewConversation = async () => {\n    const timestamp = new Date().toLocaleString();\n\n    if (currentConversationIndex !== null) {\n      const updatedConversations = [...savedConversations];\n      updatedConversations[currentConversationIndex].messages = messages.map((msg) => ({\n        role: msg.role,\n        content: msg.content,\n      }));\n      updatedConversations[currentConversationIndex].title = `Updated at ${timestamp}`;\n      setSavedConversations(updatedConversations);\n      localStorage.setItem(\"savedConversations\", JSON.stringify(updatedConversations));\n      alert(\"Conversation updated!\");\n    } else {\n      const newConversation = {\n        id: conversationId,\n        title: `Conversation at ${timestamp}`,\n        messages: messages.map((msg) => ({ role: msg.role, content: msg.content })),\n      };\n      setSavedConversations((prev) => [...prev, newConversation]);\n      localStorage.setItem(\"savedConversations\", JSON.stringify([...savedConversations, newConversation]));\n      alert(\"Conversation saved!\");\n    }\n\n    setMessages([]);\n    setUploadedFiles([]);\n    setIsSystemPrompt(true);\n    setModelLocked(false);  // Unlock model selection for the new conversation\n    const response = await fetch(\"http://localhost:5000/api/start_conversation\", {\n      method: \"POST\",\n    });\n    const data = await response.json();\n    setConversationId(data.conversation_id);\n    setCurrentConversationIndex(null);\n  };\n\n  const loadConversation = (conversation, index) => {\n    setMessages(conversation.messages);\n    setConversationId(conversation.id);\n    setCurrentConversationIndex(index);\n    setIsSystemPrompt(conversation.messages.length === 0);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"Sidebar\">\n        <h3>Saved Conversations</h3>\n        {savedConversations.map((conversation, index) => (\n          <div key={conversation.id} className=\"ConversationItem\" onClick={() => loadConversation(conversation, index)}>\n            {conversation.title}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"Main\">\n        <div className=\"Header\">\n          <label htmlFor=\"modelSelect\">Select Model:</label>\n          <select id=\"modelSelect\" value={selectedModel} onChange={handleModelChange} disabled={modelLocked}>\n            <option value=\"GPT-4\">GPT-4</option>\n            <option value=\"Claude 3.5 Sonnet\">Claude 3.5 Sonnet</option>\n          </select>\n        </div>\n\n        <div className=\"Content\">\n          {messages.map((el, i) => (\n            <div key={i} className=\"MessageWrapper\">\n              <Message role={el.role} content={el.content} />\n            </div>\n          ))}\n          {loading && <div className=\"Loader\">...</div>}\n          {fileUploaded && <div className=\"FileIndicator\"><FaCheckCircle color=\"green\" /> File Uploaded</div>}\n          {errorMessage && <div className=\"ErrorIndicator\">{errorMessage}</div>}\n        </div>\n\n        <Input\n          isSystemPrompt={isSystemPrompt}\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onClick={input ? handleSubmit : undefined}\n          onFileUpload={handleFileUpload}\n          onEnter={input ? handleSubmit : undefined}\n        />\n\n        <button onClick={saveAndStartNewConversation} className=\"SaveButton\">Save and Start New Conversation</button>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}