{"ast":null,"code":"var _jsxFileName = \"/Users/manojsahithreddyvanga/Desktop/Testing/chatgpt-clone/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Message from \"./components/Message\";\nimport Input from \"./components/Input\";\nimport Clear from \"./components/Clear\";\nimport { v4 as uuidv4 } from \"uuid\"; // For generating unique session IDs\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [savedConversations, setSavedConversations] = useState(() => {\n    const saved = localStorage.getItem(\"savedConversations\");\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [currentSessionId, setCurrentSessionId] = useState(() => uuidv4());\n  useEffect(() => {\n    localStorage.setItem(\"savedConversations\", JSON.stringify(savedConversations));\n  }, [savedConversations]);\n  const handleSubmit = async () => {\n    const userMessage = {\n      role: \"user\",\n      content: input\n    };\n    setMessages([...messages, userMessage]);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          session_id: currentSessionId,\n          user_input: input,\n          model: \"gpt-3.5-turbo\"\n        })\n      });\n      const data = await response.json();\n      const assistantMessage = {\n        role: \"assistant\",\n        content: data.response\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n      setInput(\"\");\n    } catch (error) {\n      console.error(\"Error during fetch:\", error);\n    }\n  };\n  const saveConversation = () => {\n    const timestamp = new Date().toLocaleString();\n    const newConversation = {\n      sessionId: currentSessionId,\n      title: `Conversation at ${timestamp}`,\n      messages\n    };\n    setSavedConversations([...savedConversations, newConversation]);\n    alert(\"Conversation saved!\");\n  };\n  const loadConversation = conversation => {\n    setCurrentSessionId(conversation.sessionId);\n    setMessages(conversation.messages);\n  };\n  const clear = async () => {\n    setMessages([]);\n    await fetch(\"http://localhost:5000/api/clear\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        session_id: currentSessionId\n      })\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Saved Conversations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), savedConversations.map(conversation => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ConversationItem\",\n        onClick: () => loadConversation(conversation),\n        children: conversation.title\n      }, conversation.sessionId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"Title\",\n          children: \"Chat Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Content\",\n          children: messages.map((el, i) => /*#__PURE__*/_jsxDEV(Message, {\n            role: el.role,\n            content: el.content\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onClick: input ? handleSubmit : undefined\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ButtonGroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveConversation,\n            className: \"SaveButton\",\n            children: \"Save Conversation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Clear, {\n            onClick: clear\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xgdnXlaTEYJkL2P4XjUmnQTqOGw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Message","Input","Clear","v4","uuidv4","jsxDEV","_jsxDEV","App","_s","input","setInput","messages","setMessages","savedConversations","setSavedConversations","saved","localStorage","getItem","JSON","parse","currentSessionId","setCurrentSessionId","setItem","stringify","handleSubmit","userMessage","role","content","response","fetch","method","headers","body","session_id","user_input","model","data","json","assistantMessage","prev","error","console","saveConversation","timestamp","Date","toLocaleString","newConversation","sessionId","title","alert","loadConversation","conversation","clear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","el","i","value","onChange","e","target","undefined","_c","$RefreshReg$"],"sources":["/Users/manojsahithreddyvanga/Desktop/Testing/chatgpt-clone/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Message from \"./components/Message\";\nimport Input from \"./components/Input\";\nimport Clear from \"./components/Clear\";\nimport { v4 as uuidv4 } from \"uuid\";  // For generating unique session IDs\nimport \"./App.css\";\n\nexport default function App() {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [savedConversations, setSavedConversations] = useState(() => {\n    const saved = localStorage.getItem(\"savedConversations\");\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [currentSessionId, setCurrentSessionId] = useState(() => uuidv4());\n\n  useEffect(() => {\n    localStorage.setItem(\"savedConversations\", JSON.stringify(savedConversations));\n  }, [savedConversations]);\n\n  const handleSubmit = async () => {\n    const userMessage = { role: \"user\", content: input };\n    setMessages([...messages, userMessage]);\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          session_id: currentSessionId,\n          user_input: input,\n          model: \"gpt-3.5-turbo\"\n        }),\n      });\n\n      const data = await response.json();\n      const assistantMessage = { role: \"assistant\", content: data.response };\n\n      setMessages((prev) => [...prev, assistantMessage]);\n      setInput(\"\");\n    } catch (error) {\n      console.error(\"Error during fetch:\", error);\n    }\n  };\n\n  const saveConversation = () => {\n    const timestamp = new Date().toLocaleString();\n    const newConversation = {\n      sessionId: currentSessionId,\n      title: `Conversation at ${timestamp}`,\n      messages\n    };\n\n    setSavedConversations([...savedConversations, newConversation]);\n    alert(\"Conversation saved!\");\n  };\n\n  const loadConversation = (conversation) => {\n    setCurrentSessionId(conversation.sessionId);\n    setMessages(conversation.messages);\n  };\n\n  const clear = async () => {\n    setMessages([]);\n    await fetch(\"http://localhost:5000/api/clear\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ session_id: currentSessionId }),\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"Sidebar\">\n        <h3>Saved Conversations</h3>\n        {savedConversations.map((conversation) => (\n          <div\n            key={conversation.sessionId}\n            className=\"ConversationItem\"\n            onClick={() => loadConversation(conversation)}\n          >\n            {conversation.title}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"Main\">\n        <div className=\"Column\">\n          <h3 className=\"Title\">Chat Messages</h3>\n          <div className=\"Content\">\n            {messages.map((el, i) => (\n              <Message key={i} role={el.role} content={el.content} />\n            ))}\n          </div>\n          <Input\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onClick={input ? handleSubmit : undefined}\n          />\n          <div className=\"ButtonGroup\">\n            <button onClick={saveConversation} className=\"SaveButton\">Save Conversation</button>\n            <Clear onClick={clear} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}