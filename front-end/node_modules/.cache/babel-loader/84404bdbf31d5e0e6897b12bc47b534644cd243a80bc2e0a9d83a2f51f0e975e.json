{"ast":null,"code":"var _jsxFileName = \"/Users/manojsahithreddyvanga/Desktop/Testing/chatgpt-clone/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Message from './components/Message';\nimport Input from './components/Input';\nimport History from './components/History';\nimport Clear from './components/Clear';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [history, setHistory] = useState([]);\n  const handleSend = async text => {\n    const userMessage = {\n      text,\n      sender: 'user'\n    };\n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n    try {\n      const response = await axios.post('https://api.openai.com/v1/chat/completions', {\n        model: 'gpt-3.5-turbo',\n        messages: updatedMessages.map(msg => ({\n          role: msg.sender === 'user' ? 'user' : 'assistant',\n          content: msg.text\n        }))\n      }, {\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n        }\n      });\n      const botMessage = {\n        text: response.data.choices[0].message.content,\n        sender: 'bot'\n      };\n      setMessages([...updatedMessages, botMessage]);\n      setHistory([...history, {\n        question: text,\n        answer: botMessage.text\n      }]);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleSelectHistory = index => {\n    const selectedConversation = history[index];\n    setMessages([{\n      text: selectedConversation.question,\n      sender: 'user'\n    }, {\n      text: selectedConversation.answer,\n      sender: 'bot'\n    }]);\n  };\n  const handleClear = () => {\n    setMessages([]);\n    setHistory([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(Message, {\n        text: msg.text,\n        sender: msg.sender\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      onSend: handleSend\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(History, {\n      items: history,\n      onSelect: handleSelectHistory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Clear, {\n      onClear: handleClear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8x4r9Q9ZzyPsHbBxEPdqvQIcGu8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","Message","Input","History","Clear","jsxDEV","_jsxDEV","App","_s","messages","setMessages","history","setHistory","handleSend","text","userMessage","sender","updatedMessages","response","post","model","map","msg","role","content","headers","Authorization","process","env","REACT_APP_OPENAI_API_KEY","botMessage","data","choices","message","question","answer","error","console","handleSelectHistory","index","selectedConversation","handleClear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSend","items","onSelect","onClear","_c","$RefreshReg$"],"sources":["/Users/manojsahithreddyvanga/Desktop/Testing/chatgpt-clone/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport Message from './components/Message';\nimport Input from './components/Input';\nimport History from './components/History';\nimport Clear from './components/Clear';\nimport './index.css';\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const [history, setHistory] = useState([]);\n\n  const handleSend = async (text) => {\n    const userMessage = { text, sender: 'user' };\n    const updatedMessages = [...messages, userMessage];\n    setMessages(updatedMessages);\n\n    try {\n      const response = await axios.post(\n        'https://api.openai.com/v1/chat/completions',\n        {\n          model: 'gpt-3.5-turbo',\n          messages: updatedMessages.map((msg) => ({\n            role: msg.sender === 'user' ? 'user' : 'assistant',\n            content: msg.text,\n          })),\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`,\n          },\n        }\n      );\n\n      const botMessage = {\n        text: response.data.choices[0].message.content,\n        sender: 'bot',\n      };\n      setMessages([...updatedMessages, botMessage]);\n      setHistory([...history, { question: text, answer: botMessage.text }]);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  const handleSelectHistory = (index) => {\n    const selectedConversation = history[index];\n    setMessages([\n      { text: selectedConversation.question, sender: 'user' },\n      { text: selectedConversation.answer, sender: 'bot' },\n    ]);\n  };\n\n  const handleClear = () => {\n    setMessages([]);\n    setHistory([]);\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"chat-window\">\n        {messages.map((msg, index) => (\n          <Message key={index} text={msg.text} sender={msg.sender} />\n        ))}\n      </div>\n      <Input onSend={handleSend} />\n      <History items={history} onSelect={handleSelectHistory} />\n      <Clear onClear={handleClear} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}