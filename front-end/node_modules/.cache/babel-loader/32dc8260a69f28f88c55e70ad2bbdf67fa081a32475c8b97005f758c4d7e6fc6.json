{"ast":null,"code":"var _jsxFileName = \"/Users/manojsahithreddyvanga/Desktop/Testing/chatgpt-clone/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Message from \"./components/Message\";\nimport Input from \"./components/Input\";\nimport \"./App.css\";\nimport { FaCheckCircle } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState(() => {\n    const savedMessages = localStorage.getItem(\"messages\");\n    return savedMessages ? JSON.parse(savedMessages) : [];\n  });\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [savedConversations, setSavedConversations] = useState(() => {\n    const saved = localStorage.getItem(\"savedConversations\");\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [conversationId, setConversationId] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [currentConversationIndex, setCurrentConversationIndex] = useState(null);\n  const [fileUploaded, setFileUploaded] = useState(false);\n  const [model, setModel] = useState(\"gpt-4\");\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const initializeConversation = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/start_conversation\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            model\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to initialize conversation');\n        }\n        const data = await response.json();\n        setConversationId(data.conversation_id);\n      } catch (error) {\n        setError(\"Failed to start conversation. Please try again.\");\n        console.error(\"Initialization error:\", error);\n      }\n    };\n    if (!conversationId) {\n      initializeConversation();\n    }\n  }, [conversationId, model]);\n  useEffect(() => {\n    localStorage.setItem(\"messages\", JSON.stringify(messages));\n  }, [messages]);\n  useEffect(() => {\n    localStorage.setItem(\"savedConversations\", JSON.stringify(savedConversations));\n  }, [savedConversations]);\n  const handleSubmit = async () => {\n    if (!conversationId) {\n      setError(\"Conversation not initialized properly. Please try again.\");\n      return;\n    }\n    const userMessage = {\n      role: \"user\",\n      content: input,\n      attachedFiles: uploadedFiles.map(file => file.name)\n    };\n    setMessages([...messages, userMessage]);\n    setInput(\"\");\n    setLoading(true);\n    setError(null);\n    try {\n      const formData = new FormData();\n      uploadedFiles.forEach(file => formData.append(\"files\", file));\n      formData.append(\"conversation_id\", conversationId);\n      formData.append(\"user_input\", input);\n      formData.append(\"model\", model);\n      const response = await fetch(\"http://localhost:5000/api/chat_with_files\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to get response from server');\n      }\n      const data = await response.json();\n      if (data.error) {\n        throw new Error(data.error);\n      }\n      const assistantMessage = {\n        role: \"assistant\",\n        content: data.response\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n      setUploadedFiles([]);\n      setFileUploaded(false);\n    } catch (error) {\n      setError(`Error: ${error.message}`);\n      console.error(\"Error during fetch:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFileUpload = e => {\n    const files = Array.from(e.target.files);\n    if (files.length === 0) return;\n    setUploadedFiles(prev => [...prev, ...files]);\n    setFileUploaded(true);\n  };\n  const saveAndStartNewConversation = async () => {\n    try {\n      const timestamp = new Date().toLocaleString();\n      if (currentConversationIndex !== null) {\n        const updatedConversations = [...savedConversations];\n        updatedConversations[currentConversationIndex] = {\n          ...updatedConversations[currentConversationIndex],\n          messages: messages,\n          title: `Updated at ${timestamp}`,\n          model: model\n        };\n        setSavedConversations(updatedConversations);\n      } else {\n        const newConversation = {\n          id: conversationId,\n          title: `Conversation at ${timestamp}`,\n          messages: messages,\n          model: model\n        };\n        setSavedConversations(prev => [...prev, newConversation]);\n      }\n      setMessages([]);\n      setUploadedFiles([]);\n      setError(null);\n      const response = await fetch(\"http://localhost:5000/api/start_conversation\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          model\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to start new conversation');\n      }\n      const data = await response.json();\n      setConversationId(data.conversation_id);\n      setCurrentConversationIndex(null);\n    } catch (error) {\n      setError(`Failed to save conversation: ${error.message}`);\n      console.error(\"Save conversation error:\", error);\n    }\n  };\n  const loadConversation = async (conversation, index) => {\n    try {\n      setModel(conversation.model || 'gpt-4');\n      setMessages(conversation.messages);\n      const response = await fetch(\"http://localhost:5000/api/start_conversation\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          model: conversation.model || 'gpt-4'\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to initialize conversation');\n      }\n      const data = await response.json();\n      setConversationId(data.conversation_id);\n      setCurrentConversationIndex(index);\n      setError(null);\n    } catch (error) {\n      setError(`Failed to load conversation: ${error.message}`);\n      console.error(\"Load conversation error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Saved Conversations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), savedConversations.map((conversation, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ConversationItem\",\n        onClick: () => loadConversation(conversation, index),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: conversation.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ModelTag\",\n          children: conversation.model\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)]\n      }, conversation.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"Title\",\n          children: \"Chat Messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ErrorMessage\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Content\",\n          children: [messages.map((el, i) => {\n            var _el$attachedFiles;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"MessageWrapper\",\n              children: [/*#__PURE__*/_jsxDEV(Message, {\n                role: el.role,\n                content: el.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 17\n              }, this), ((_el$attachedFiles = el.attachedFiles) === null || _el$attachedFiles === void 0 ? void 0 : _el$attachedFiles.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"AttachedFiles\",\n                children: [\"Files: \", el.attachedFiles.join(\", \")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 19\n              }, this)]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this);\n          }), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Loader\",\n            children: \"Processing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), fileUploaded && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"FileIndicator\",\n            children: [/*#__PURE__*/_jsxDEV(FaCheckCircle, {\n              color: \"green\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), uploadedFiles.length, \" file(s) uploaded\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ModelSelector\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"model\",\n            children: \"Model: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"model\",\n            value: model,\n            onChange: e => setModel(e.target.value),\n            disabled: loading,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"gpt-4\",\n              children: \"GPT-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"claude-3.5-sonnet\",\n              children: \"Claude 3.5 Sonnet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"claude-3.5-haiku\",\n              children: \"Claude 3.5 Haiku\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onClick: input && !loading ? handleSubmit : undefined,\n          onFileUpload: handleFileUpload,\n          onEnter: input && !loading ? handleSubmit : undefined,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveAndStartNewConversation,\n          className: \"SaveButton\",\n          disabled: loading,\n          children: \"Save and Start New Conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QmbND+XJ6aw4G9WZso2Hqh1Nj6k=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Message","Input","FaCheckCircle","jsxDEV","_jsxDEV","App","_s","input","setInput","messages","setMessages","savedMessages","localStorage","getItem","JSON","parse","uploadedFiles","setUploadedFiles","savedConversations","setSavedConversations","saved","conversationId","setConversationId","loading","setLoading","currentConversationIndex","setCurrentConversationIndex","fileUploaded","setFileUploaded","model","setModel","error","setError","initializeConversation","response","fetch","method","headers","body","stringify","ok","Error","data","json","conversation_id","console","setItem","handleSubmit","userMessage","role","content","attachedFiles","map","file","name","formData","FormData","forEach","append","assistantMessage","prev","message","handleFileUpload","e","files","Array","from","target","length","saveAndStartNewConversation","timestamp","Date","toLocaleString","updatedConversations","title","newConversation","id","loadConversation","conversation","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","el","i","_el$attachedFiles","join","color","htmlFor","value","onChange","disabled","undefined","onFileUpload","onEnter","_c","$RefreshReg$"],"sources":["/Users/manojsahithreddyvanga/Desktop/Testing/chatgpt-clone/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Message from \"./components/Message\";\nimport Input from \"./components/Input\";\nimport \"./App.css\";\nimport { FaCheckCircle } from \"react-icons/fa\";\n\nexport default function App() {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState(() => {\n    const savedMessages = localStorage.getItem(\"messages\");\n    return savedMessages ? JSON.parse(savedMessages) : [];\n  });\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [savedConversations, setSavedConversations] = useState(() => {\n    const saved = localStorage.getItem(\"savedConversations\");\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [conversationId, setConversationId] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [currentConversationIndex, setCurrentConversationIndex] = useState(null);\n  const [fileUploaded, setFileUploaded] = useState(false);\n  const [model, setModel] = useState(\"gpt-4\");\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const initializeConversation = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5000/api/start_conversation\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ model }),\n        });\n        \n        if (!response.ok) {\n          throw new Error('Failed to initialize conversation');\n        }\n        \n        const data = await response.json();\n        setConversationId(data.conversation_id);\n      } catch (error) {\n        setError(\"Failed to start conversation. Please try again.\");\n        console.error(\"Initialization error:\", error);\n      }\n    };\n\n    if (!conversationId) {\n      initializeConversation();\n    }\n  }, [conversationId, model]);\n\n  useEffect(() => {\n    localStorage.setItem(\"messages\", JSON.stringify(messages));\n  }, [messages]);\n\n  useEffect(() => {\n    localStorage.setItem(\"savedConversations\", JSON.stringify(savedConversations));\n  }, [savedConversations]);\n\n  const handleSubmit = async () => {\n    if (!conversationId) {\n      setError(\"Conversation not initialized properly. Please try again.\");\n      return;\n    }\n\n    const userMessage = {\n      role: \"user\",\n      content: input,\n      attachedFiles: uploadedFiles.map((file) => file.name),\n    };\n\n    setMessages([...messages, userMessage]);\n    setInput(\"\");\n    setLoading(true);\n    setError(null);\n\n    try {\n      const formData = new FormData();\n      uploadedFiles.forEach(file => formData.append(\"files\", file));\n      formData.append(\"conversation_id\", conversationId);\n      formData.append(\"user_input\", input);\n      formData.append(\"model\", model);\n\n      const response = await fetch(\"http://localhost:5000/api/chat_with_files\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to get response from server');\n      }\n\n      const data = await response.json();\n      \n      if (data.error) {\n        throw new Error(data.error);\n      }\n\n      const assistantMessage = { role: \"assistant\", content: data.response };\n      setMessages((prev) => [...prev, assistantMessage]);\n      setUploadedFiles([]);\n      setFileUploaded(false);\n    } catch (error) {\n      setError(`Error: ${error.message}`);\n      console.error(\"Error during fetch:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleFileUpload = (e) => {\n    const files = Array.from(e.target.files);\n    if (files.length === 0) return;\n    \n    setUploadedFiles((prev) => [...prev, ...files]);\n    setFileUploaded(true);\n  };\n\n  const saveAndStartNewConversation = async () => {\n    try {\n      const timestamp = new Date().toLocaleString();\n\n      if (currentConversationIndex !== null) {\n        const updatedConversations = [...savedConversations];\n        updatedConversations[currentConversationIndex] = {\n          ...updatedConversations[currentConversationIndex],\n          messages: messages,\n          title: `Updated at ${timestamp}`,\n          model: model\n        };\n        setSavedConversations(updatedConversations);\n      } else {\n        const newConversation = {\n          id: conversationId,\n          title: `Conversation at ${timestamp}`,\n          messages: messages,\n          model: model\n        };\n        setSavedConversations((prev) => [...prev, newConversation]);\n      }\n\n      setMessages([]);\n      setUploadedFiles([]);\n      setError(null);\n\n      const response = await fetch(\"http://localhost:5000/api/start_conversation\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ model }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to start new conversation');\n      }\n\n      const data = await response.json();\n      setConversationId(data.conversation_id);\n      setCurrentConversationIndex(null);\n    } catch (error) {\n      setError(`Failed to save conversation: ${error.message}`);\n      console.error(\"Save conversation error:\", error);\n    }\n  };\n\n  const loadConversation = async (conversation, index) => {\n    try {\n      setModel(conversation.model || 'gpt-4');\n      setMessages(conversation.messages);\n      \n      const response = await fetch(\"http://localhost:5000/api/start_conversation\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ model: conversation.model || 'gpt-4' }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to initialize conversation');\n      }\n\n      const data = await response.json();\n      setConversationId(data.conversation_id);\n      setCurrentConversationIndex(index);\n      setError(null);\n    } catch (error) {\n      setError(`Failed to load conversation: ${error.message}`);\n      console.error(\"Load conversation error:\", error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"Sidebar\">\n        <h3>Saved Conversations</h3>\n        {savedConversations.map((conversation, index) => (\n          <div\n            key={conversation.id}\n            className=\"ConversationItem\"\n            onClick={() => loadConversation(conversation, index)}\n          >\n            <div>{conversation.title}</div>\n            <div className=\"ModelTag\">{conversation.model}</div>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"Main\">\n        <div className=\"Column\">\n          <h3 className=\"Title\">Chat Messages</h3>\n          {error && <div className=\"ErrorMessage\">{error}</div>}\n          \n          <div className=\"Content\">\n            {messages.map((el, i) => (\n              <div key={i} className=\"MessageWrapper\">\n                <Message role={el.role} content={el.content} />\n                {el.attachedFiles?.length > 0 && (\n                  <div className=\"AttachedFiles\">\n                    Files: {el.attachedFiles.join(\", \")}\n                  </div>\n                )}\n              </div>\n            ))}\n            {loading && <div className=\"Loader\">Processing...</div>}\n            {fileUploaded && (\n              <div className=\"FileIndicator\">\n                <FaCheckCircle color=\"green\" /> \n                {uploadedFiles.length} file(s) uploaded\n              </div>\n            )}\n          </div>\n\n          <div className=\"ModelSelector\">\n            <label htmlFor=\"model\">Model: </label>\n            <select \n              id=\"model\" \n              value={model} \n              onChange={(e) => setModel(e.target.value)}\n              disabled={loading}\n            >\n              <option value=\"gpt-4\">GPT-4</option>\n              <option value=\"claude-3.5-sonnet\">Claude 3.5 Sonnet</option>\n              <option value=\"claude-3.5-haiku\">Claude 3.5 Haiku</option>\n            </select>\n          </div>\n\n          <Input\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onClick={input && !loading ? handleSubmit : undefined}\n            onFileUpload={handleFileUpload}\n            onEnter={input && !loading ? handleSubmit : undefined}\n            disabled={loading}\n          />\n\n          <button \n            onClick={saveAndStartNewConversation} \n            className=\"SaveButton\"\n            disabled={loading}\n          >\n            Save and Start New Conversation\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}