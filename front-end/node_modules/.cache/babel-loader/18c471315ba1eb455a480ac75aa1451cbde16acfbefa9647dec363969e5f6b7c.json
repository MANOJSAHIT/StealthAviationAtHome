{"ast":null,"code":"var _jsxFileName = \"/Users/manojsahithreddyvanga/Desktop/Testing/chatgpt-clone/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Message from \"./components/Message\";\nimport Input from \"./components/Input\";\nimport History from \"./components/History\";\nimport Clear from \"./components/Clear\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState(() => {\n    const savedMessages = localStorage.getItem(\"messages\");\n    return savedMessages ? JSON.parse(savedMessages) : [];\n  });\n  const [history, setHistory] = useState(() => {\n    const savedHistory = localStorage.getItem(\"history\");\n    return savedHistory ? JSON.parse(savedHistory) : [];\n  });\n  useEffect(() => {\n    localStorage.setItem(\"messages\", JSON.stringify(messages));\n    localStorage.setItem(\"history\", JSON.stringify(history));\n  }, [messages, history]);\n  const handleSubmit = async () => {\n    const userMessage = {\n      role: \"user\",\n      content: input\n    };\n    setMessages([...messages, userMessage]);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user_input: input\n        }) // Only send the new message\n      });\n      const data = await response.json();\n      const assistantMessage = {\n        role: \"assistant\",\n        content: data.response\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n      setHistory(prev => [...prev, {\n        question: input,\n        answer: data.response\n      }]);\n      setInput(\"\");\n    } catch (error) {\n      console.error(\"Error during fetch:\", error);\n    }\n  };\n  const clear = async () => {\n    setMessages([]);\n    setHistory([]);\n    localStorage.removeItem(\"messages\");\n    localStorage.removeItem(\"history\");\n\n    // Clear conversation on the backend\n    await fetch(\"http://localhost:5000/api/clear\", {\n      method: \"POST\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Title\",\n        children: \"Chat Messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Content\",\n        children: messages.map((el, i) => /*#__PURE__*/_jsxDEV(Message, {\n          role: el.role,\n          content: el.content\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onClick: input ? handleSubmit : undefined\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Title\",\n        children: \"History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Content\",\n        children: history.map((el, i) => /*#__PURE__*/_jsxDEV(History, {\n          question: el.question,\n          onClick: () => setMessages([{\n            role: \"user\",\n            content: history[i].question\n          }, {\n            role: \"assistant\",\n            content: history[i].answer\n          }])\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Clear, {\n        onClick: clear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Cxxci79UxVOvfhtBQOfDIwHOddU=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Message","Input","History","Clear","jsxDEV","_jsxDEV","App","_s","input","setInput","messages","setMessages","savedMessages","localStorage","getItem","JSON","parse","history","setHistory","savedHistory","setItem","stringify","handleSubmit","userMessage","role","content","response","fetch","method","headers","body","user_input","data","json","assistantMessage","prev","question","answer","error","console","clear","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","el","i","value","onChange","e","target","onClick","undefined","_c","$RefreshReg$"],"sources":["/Users/manojsahithreddyvanga/Desktop/Testing/chatgpt-clone/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Message from \"./components/Message\";\nimport Input from \"./components/Input\";\nimport History from \"./components/History\";\nimport Clear from \"./components/Clear\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState(() => {\n    const savedMessages = localStorage.getItem(\"messages\");\n    return savedMessages ? JSON.parse(savedMessages) : [];\n  });\n  const [history, setHistory] = useState(() => {\n    const savedHistory = localStorage.getItem(\"history\");\n    return savedHistory ? JSON.parse(savedHistory) : [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\"messages\", JSON.stringify(messages));\n    localStorage.setItem(\"history\", JSON.stringify(history));\n  }, [messages, history]);\n\n  const handleSubmit = async () => {\n    const userMessage = {\n      role: \"user\",\n      content: input,\n    };\n\n    setMessages([...messages, userMessage]);\n\n    try {\n      const response = await fetch(\"http://localhost:5000/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ user_input: input }),  // Only send the new message\n      });\n\n      const data = await response.json();\n      const assistantMessage = {\n        role: \"assistant\",\n        content: data.response,\n      };\n\n      setMessages((prev) => [...prev, assistantMessage]);\n      setHistory((prev) => [...prev, { question: input, answer: data.response }]);\n      setInput(\"\");\n    } catch (error) {\n      console.error(\"Error during fetch:\", error);\n    }\n  };\n\n  const clear = async () => {\n    setMessages([]);\n    setHistory([]);\n    localStorage.removeItem(\"messages\");\n    localStorage.removeItem(\"history\");\n\n    // Clear conversation on the backend\n    await fetch(\"http://localhost:5000/api/clear\", {\n      method: \"POST\",\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"Column\">\n        <h3 className=\"Title\">Chat Messages</h3>\n        <div className=\"Content\">\n          {messages.map((el, i) => (\n            <Message key={i} role={el.role} content={el.content} />\n          ))}\n        </div>\n        <Input\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onClick={input ? handleSubmit : undefined}\n        />\n      </div>\n      <div className=\"Column\">\n        <h3 className=\"Title\">History</h3>\n        <div className=\"Content\">\n          {history.map((el, i) => (\n            <History\n              key={i}\n              question={el.question}\n              onClick={() =>\n                setMessages([\n                  { role: \"user\", content: history[i].question },\n                  { role: \"assistant\", content: history[i].answer },\n                ])\n              }\n            />\n          ))}\n        </div>\n        <Clear onClick={clear} />\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,MAAM;IAC7C,MAAMc,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACtD,OAAOF,aAAa,GAAGG,IAAI,CAACC,KAAK,CAACJ,aAAa,CAAC,GAAG,EAAE;EACvD,CAAC,CAAC;EACF,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,MAAM;IAC3C,MAAMqB,YAAY,GAAGN,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IACpD,OAAOK,YAAY,GAAGJ,IAAI,CAACC,KAAK,CAACG,YAAY,CAAC,GAAG,EAAE;EACrD,CAAC,CAAC;EAEFpB,SAAS,CAAC,MAAM;IACdc,YAAY,CAACO,OAAO,CAAC,UAAU,EAAEL,IAAI,CAACM,SAAS,CAACX,QAAQ,CAAC,CAAC;IAC1DG,YAAY,CAACO,OAAO,CAAC,SAAS,EAAEL,IAAI,CAACM,SAAS,CAACJ,OAAO,CAAC,CAAC;EAC1D,CAAC,EAAE,CAACP,QAAQ,EAAEO,OAAO,CAAC,CAAC;EAEvB,MAAMK,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,WAAW,GAAG;MAClBC,IAAI,EAAE,MAAM;MACZC,OAAO,EAAEjB;IACX,CAAC;IAEDG,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEa,WAAW,CAAC,CAAC;IAEvC,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEf,IAAI,CAACM,SAAS,CAAC;UAAEU,UAAU,EAAEvB;QAAM,CAAC,CAAC,CAAG;MAChD,CAAC,CAAC;MAEF,MAAMwB,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClC,MAAMC,gBAAgB,GAAG;QACvBV,IAAI,EAAE,WAAW;QACjBC,OAAO,EAAEO,IAAI,CAACN;MAChB,CAAC;MAEDf,WAAW,CAAEwB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,gBAAgB,CAAC,CAAC;MAClDhB,UAAU,CAAEiB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAEC,QAAQ,EAAE5B,KAAK;QAAE6B,MAAM,EAAEL,IAAI,CAACN;MAAS,CAAC,CAAC,CAAC;MAC3EjB,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,OAAO6B,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,MAAME,KAAK,GAAG,MAAAA,CAAA,KAAY;IACxB7B,WAAW,CAAC,EAAE,CAAC;IACfO,UAAU,CAAC,EAAE,CAAC;IACdL,YAAY,CAAC4B,UAAU,CAAC,UAAU,CAAC;IACnC5B,YAAY,CAAC4B,UAAU,CAAC,SAAS,CAAC;;IAElC;IACA,MAAMd,KAAK,CAAC,iCAAiC,EAAE;MAC7CC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;EAED,oBACEvB,OAAA;IAAKqC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBtC,OAAA;MAAKqC,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBtC,OAAA;QAAIqC,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxC1C,OAAA;QAAKqC,SAAS,EAAC,SAAS;QAAAC,QAAA,EACrBjC,QAAQ,CAACsC,GAAG,CAAC,CAACC,EAAE,EAAEC,CAAC,kBAClB7C,OAAA,CAACL,OAAO;UAASwB,IAAI,EAAEyB,EAAE,CAACzB,IAAK;UAACC,OAAO,EAAEwB,EAAE,CAACxB;QAAQ,GAAtCyB,CAAC;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAuC,CACvD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN1C,OAAA,CAACJ,KAAK;QACJkD,KAAK,EAAE3C,KAAM;QACb4C,QAAQ,EAAGC,CAAC,IAAK5C,QAAQ,CAAC4C,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC1CI,OAAO,EAAE/C,KAAK,GAAGc,YAAY,GAAGkC;MAAU;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN1C,OAAA;MAAKqC,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACrBtC,OAAA;QAAIqC,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClC1C,OAAA;QAAKqC,SAAS,EAAC,SAAS;QAAAC,QAAA,EACrB1B,OAAO,CAAC+B,GAAG,CAAC,CAACC,EAAE,EAAEC,CAAC,kBACjB7C,OAAA,CAACH,OAAO;UAENkC,QAAQ,EAAEa,EAAE,CAACb,QAAS;UACtBmB,OAAO,EAAEA,CAAA,KACP5C,WAAW,CAAC,CACV;YAAEa,IAAI,EAAE,MAAM;YAAEC,OAAO,EAAER,OAAO,CAACiC,CAAC,CAAC,CAACd;UAAS,CAAC,EAC9C;YAAEZ,IAAI,EAAE,WAAW;YAAEC,OAAO,EAAER,OAAO,CAACiC,CAAC,CAAC,CAACb;UAAO,CAAC,CAClD;QACF,GAPIa,CAAC;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQP,CACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN1C,OAAA,CAACF,KAAK;QAACoD,OAAO,EAAEf;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxC,EAAA,CA9FuBD,GAAG;AAAAmD,EAAA,GAAHnD,GAAG;AAAA,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}